<?xml version="1.0"?>
<!DOCTYPE modification SYSTEM "http://www.elkarte.net/site/modification">
<modification xmlns="http://www.elkarte.net/site/modification" xmlns:elk="http://www.elkarte.net/">

	<id>Elkarte Contributors:ElkArte_102_patch</id>
	<version>1.0</version>
	<file name="BOARDDIR/SSI.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[define('ELK', 'SSI');

// Shortcut for the browser cache stale
define('CACHE_STALE', '?10RC1');

// We're going to want a few globals... these are all set later.
global $time_start, $maintenance, $msubject, $mmessage, $mbname, $language;]]></search>
			<add><![CDATA[define('ELK', 'SSI');

// Shortcut for the browser cache stale
define('CACHE_STALE', '?102');

// We're going to want a few globals... these are all set later.
global $time_start, $maintenance, $msubject, $mmessage, $mbname, $language;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$row['id_member'] = $row[$preview . '_id_member'];
		$row['smileys_enabled'] = $row[$preview . '_smileys'];
		$row['poster_time'] = $row[$preview . '_poster_time'];
		$row['poster_name'] = $row[$preview . '_member_name'];
		$row['body'] = parse_bbc($row['body'], $row['smileys_enabled'], $row['id_msg']);

		// Check that this message icon is there...]]></search>
			<add><![CDATA[		$row['id_member'] = $row[$preview . '_id_member'];
		$row['smileys_enabled'] = $row[$preview . '_smileys'];
		$row['poster_time'] = $row[$preview . '_poster_time'];
		$row['poster_name'] = $row[$preview . '_display_name'];
		$row['body'] = parse_bbc($row['body'], $row['smileys_enabled'], $row['id_msg']);

		// Check that this message icon is there...]]></add>
		</operation>
	</file>
	<file name="BOARDDIR/index.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */

$forum_version = 'ElkArte 1.0.1';

// First things first, but not necessarily in that order.
define('ELK', 1);

// Shortcut for the browser cache stale
define('CACHE_STALE', '?10RC1');

if (function_exists('set_magic_quotes_runtime'))
	@set_magic_quotes_runtime(0);]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */

$forum_version = 'ElkArte 1.0.2';
define('FORUM_VERSION', $forum_version);

// First things first, but not necessarily in that order.
define('ELK', 1);

// Shortcut for the browser cache stale
define('CACHE_STALE', '?102');

if (function_exists('set_magic_quotes_runtime'))
	@set_magic_quotes_runtime(0);]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/CurlFetchWebdata.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		}
		else
			return $post_data;

	}

	/**]]></search>
			<add><![CDATA[		}
		else
			return $post_data;
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// set proper headers only
		if (isset($temp[0]) && isset($temp[1]))
			$this->_headers[strtolower($temp[0])] = strtolower(trim($temp[1]));

		// return the length of what was *passed* unless you want a Failed writing header error ;)
		return strlen($header);]]></search>
			<add><![CDATA[
		// set proper headers only
		if (isset($temp[0]) && isset($temp[1]))
			$this->_headers[strtolower($temp[0])] = trim($temp[1]);

		// return the length of what was *passed* unless you want a Failed writing header error ;)
		return strlen($header);]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Load.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function determineAvatar($profile)
{
	global $modSettings, $scripturl, $settings;

	if (empty($profile))
		return array();

	// If we're always html resizing, assume it's too large.
	if ($modSettings['avatar_action_too_large'] == 'option_html_resize' || $modSettings['avatar_action_too_large'] == 'option_js_resize')
	{
		$max_avatar_width = !empty($modSettings['avatar_max_width_external']) ? ' max-width:' . $modSettings['avatar_max_width_external'] . 'px;' : '';
		$max_avatar_height = !empty($modSettings['avatar_max_height_external']) ? ' max-height:' . $modSettings['avatar_max_height_external'] . 'px;' : '';
	}
	else
	{
		$max_avatar_width = '';
		$max_avatar_height = '';
	}

	$avatar_protocol = substr(strtolower($profile['avatar']), 0, 7);]]></search>
			<add><![CDATA[ */
function determineAvatar($profile)
{
	global $modSettings, $scripturl, $settings, $context;
	static $added_once = false;

	if (empty($profile))
		return array();

	// @todo compatibility setting for migration
	if (!isset($modSettings['avatar_max_height']))
		$modSettings['avatar_max_height'] = $modSettings['avatar_max_height_external'];
	if (!isset($modSettings['avatar_max_width']))
		$modSettings['avatar_max_width'] = $modSettings['avatar_max_width_external'];

	// Since it's nice to have avatars all of the same size, and in some cases the size detection may fail,
	// let's add the css in any case
	if (!$added_once)
	{
		if (!isset($context['html_headers']))
			$context['html_headers'] = '';

		if (!empty($modSettings['avatar_max_width']) || !empty($modSettings['avatar_max_height']))
		{
			$context['html_headers'] .= '
	<style>
		.avatarresize {' . (!empty($modSettings['avatar_max_width']) ? '
			max-width:' . $modSettings['avatar_max_width'] . 'px;' : '') . (!empty($modSettings['avatar_max_height']) ? '
			max-height:' . $modSettings['avatar_max_height'] . 'px;' : '') . '
		}
	</style>';
		}
		$added_once = true;
	}

	$avatar_protocol = substr(strtolower($profile['avatar']), 0, 7);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar" src="' . $avatar_url . '" alt="" />',
			'href' => $avatar_url,
			'url' => '',
		);]]></search>
			<add><![CDATA[
		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar avatarresize" src="' . $avatar_url . '" alt="" />',
			'href' => $avatar_url,
			'url' => '',
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar" src="' . $profile['avatar'] . '" style="' . $max_avatar_width . $max_avatar_height . '" alt="" />',
			'href' => $profile['avatar'],
			'url' => $profile['avatar'],
		);]]></search>
			<add><![CDATA[	{
		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar avatarresize" src="' . $profile['avatar'] . '" alt="" />',
			'href' => $profile['avatar'],
			'url' => $profile['avatar'],
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	elseif (!empty($profile['avatar']) && $profile['avatar'] === 'gravatar')
	{
		// Gravatars URL.
		$gravatar_url = '//www.gravatar.com/avatar/' . md5(strtolower($profile['email_address'])) . 'd=' . $modSettings['avatar_max_height_external'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar" src="' . $gravatar_url . '" style="' . $max_avatar_width . $max_avatar_height . '" alt="" />',
			'href' => $gravatar_url,
			'url' => $gravatar_url,
		);]]></search>
			<add><![CDATA[	elseif (!empty($profile['avatar']) && $profile['avatar'] === 'gravatar')
	{
		// Gravatars URL.
		$gravatar_url = '//www.gravatar.com/avatar/' . md5(strtolower($profile['email_address'])) . 'd=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar avatarresize" src="' . $gravatar_url . '" alt="" />',
			'href' => $gravatar_url,
			'url' => $gravatar_url,
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar" src="' . $modSettings['avatar_url'] . '/' . $profile['avatar'] . '" style="' . $max_avatar_width . $max_avatar_height . '" alt="" />',
			'href' => $modSettings['avatar_url'] . '/' . $profile['avatar'],
			'url' => $modSettings['avatar_url'] . '/' . $profile['avatar'],
		);]]></search>
			<add><![CDATA[	{
		$avatar = array(
			'name' => $profile['avatar'],
			'image' => '<img class="avatar avatarresize" src="' . $modSettings['avatar_url'] . '/' . $profile['avatar'] . '" alt="" />',
			'href' => $modSettings['avatar_url'] . '/' . $profile['avatar'],
			'url' => $modSettings['avatar_url'] . '/' . $profile['avatar'],
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Let's proceed with the default avatar.
		$avatar = array(
			'name' => '',
			'image' => '<img class="avatar" src="' . $settings['images_url'] . '/default_avatar.png" style="' . $max_avatar_width . $max_avatar_height . '" alt="" />',
			'href' => $settings['images_url'] . '/default_avatar.png',
			'url' => 'http://',
		);]]></search>
			<add><![CDATA[		// Let's proceed with the default avatar.
		$avatar = array(
			'name' => '',
			'image' => '<img class="avatar avatarresize" src="' . $settings['images_url'] . '/default_avatar.png" alt="" />',
			'href' => $settings['images_url'] . '/default_avatar.png',
			'url' => 'http://',
		);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		);

	// Make sure there's a preview for gravatars available.
	$avatar['gravatar_preview'] = '//www.gravatar.com/avatar/' . md5(strtolower($profile['email_address'])) . 'd=' . $modSettings['avatar_max_height_external'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

	return $avatar;
}]]></search>
			<add><![CDATA[		);

	// Make sure there's a preview for gravatars available.
	$avatar['gravatar_preview'] = '//www.gravatar.com/avatar/' . md5(strtolower($profile['email_address'])) . 'd=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');

	return $avatar;
}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function doSecurityChecks()
{
	global $modSettings, $context, $maintenance, $user_info, $txt, $scripturl, $user_settings;

	$show_warnings = false;
]]></search>
			<add><![CDATA[ */
function doSecurityChecks()
{
	global $modSettings, $context, $maintenance, $user_info, $txt, $scripturl, $user_settings, $options;

	$show_warnings = false;
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Maintenance mode enabled?
		if (!empty($maintenance))
			$context['warning_controls']['maintenance'] = sprintf($txt['admin_maintenance_active'], ($scripturl . '?action=admin;area=serversettings;' . $context['session_var'] . '=' . $context['session_id']));
	}

	// Check for database errors.]]></search>
			<add><![CDATA[		// Maintenance mode enabled?
		if (!empty($maintenance))
			$context['warning_controls']['maintenance'] = sprintf($txt['admin_maintenance_active'], ($scripturl . '?action=admin;area=serversettings;' . $context['session_var'] . '=' . $context['session_id']));

		// New updates
		if (defined('FORUM_VERSION'))
		{
			$index = 'new_in_' . str_replace(array('ElkArte ', '.'), array('', '_'), FORUM_VERSION);
			if (!empty($modSettings[$index]) && empty($options['dismissed_' . $index]))
			{
				$context['new_version_updates'] = array(
					'title' => $txt['new_version_updates'],
					'errors' => array(replaceBasicActionUrl($txt['new_version_updates_text'])),
				);
			}
		}
	}

	// Check for database errors.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function detectServerLoad()
{
	$load_average = @file_get_contents('/proc/loadavg');

	if (!empty($load_average) && preg_match('~^([^ ]+?) ([^ ]+?) ([^ ]+)~', $load_average, $matches) != 0)
		return (float) $matches[1];
	elseif (($load_average = @`uptime`) != null && preg_match('~load average[s]?: (\d+\.\d+), (\d+\.\d+), (\d+\.\d+)~i', $load_average, $matches) != 0)
		return (float) $matches[1];

	return false;
}]]></search>
			<add><![CDATA[ */
function detectServerLoad()
{
	if (stristr(PHP_OS, 'win'))
		return false;

	$cores = detectServerCores();

	// The internal function should always be available
	if (function_exists('sys_getloadavg'))
	{
		$sys_load = sys_getloadavg();
        return $sys_load[0] / $cores;
	}
	// Maybe someone has a custom compile
	else
	{
		$load_average = @file_get_contents('/proc/loadavg');

		if (!empty($load_average) && preg_match('~^([^ ]+?) ([^ ]+?) ([^ ]+)~', $load_average, $matches) != 0)
			return (float) $matches[1] / $cores;
		elseif (($load_average = @`uptime`) != null && preg_match('~load average[s]?: (\d+\.\d+), (\d+\.\d+), (\d+\.\d+)~i', $load_average, $matches) != 0)
			return (float) $matches[1] / $cores;

		return false;
	}
}

/**
 * Determines the number of cpu cores available
 *
 * - Used to normalize server load based on cores
 *
 * @return int
 */
function detectServerCores()
{
	$cores = @file_get_contents('/proc/cpuinfo');

	if (!empty($cores))
	{
		$cores = preg_match_all('~^physical id~m', $cores, $matches);
		if (!empty($cores))
			return (int) $cores;
	}

	return 1;
}]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/QueryString.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (!empty($modSettings['queryless_urls']) && (!$context['server']['is_cgi'] || ini_get('cgi.fix_pathinfo') == 1 || @get_cfg_var('cgi.fix_pathinfo') == 1) && ($context['server']['is_apache'] || $context['server']['is_lighttpd'] || $context['server']['is_litespeed']))
	{
		// Let's do something special for session ids!
		$buffer = preg_replace_callback('~"' . preg_quote($scripturl, '/') . '\?((?:board|topic)=[^#"]+?)(#[^"]*?)?"~', 'buffer_callback', $buffer);
	}

	// Return the changed buffer.]]></search>
			<add><![CDATA[	if (!empty($modSettings['queryless_urls']) && (!$context['server']['is_cgi'] || ini_get('cgi.fix_pathinfo') == 1 || @get_cfg_var('cgi.fix_pathinfo') == 1) && ($context['server']['is_apache'] || $context['server']['is_lighttpd'] || $context['server']['is_litespeed']))
	{
		// Let's do something special for session ids!
		$buffer = preg_replace_callback('~"' . preg_quote($scripturl, '~') . '\?((?:board|topic)=[^#"]+?)(#[^"]*?)?"~', 'buffer_callback', $buffer);
	}

	// Return the changed buffer.]]></add>
		</operation>
	</file>
	<file name="SOURCEDIR/Subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					global $context;

					if (!isset($disabled[\'code\']))
						$data = str_replace("\t", "<span style=\"white-space: pre;\">\t</span>", $data);
					'),
				'block_level' => true,
			),]]></search>
			<add><![CDATA[					global $context;

					if (!isset($disabled[\'code\']))
						$data = str_replace("\t", "<span class=\"tab\">\t</span>", $data);
					'),
				'block_level' => true,
			),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					global $context;

					if (!isset($disabled[\'code\']))
						$data[0] = str_replace("\t", "<span style=\"white-space: pre;\">\t</span>", $data[0]);
					'),
				'block_level' => true,
			),]]></search>
			<add><![CDATA[					global $context;

					if (!isset($disabled[\'code\']))
						$data[0] = str_replace("\t", "<span class=\"tab\">\t</span>", $data[0]);
					'),
				'block_level' => true,
			),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (!empty($modSettings['queryless_urls']) && (empty($context['server']['is_cgi']) || ini_get('cgi.fix_pathinfo') == 1 || @get_cfg_var('cgi.fix_pathinfo') == 1) && (!empty($context['server']['is_apache']) || !empty($context['server']['is_lighttpd']) || !empty($context['server']['is_litespeed'])))
	{
		if (defined('SID') && SID != '')
			$setLocation = preg_replace_callback('~^' . preg_quote($scripturl, '/') . '\?(?:' . SID . '(?:;|&|&amp;))((?:board|topic)=[^#]+?)(#[^"]*?)?$~', 'redirectexit_callback', $setLocation);
		else
			$setLocation = preg_replace_callback('~^' . preg_quote($scripturl, '/') . '\?((?:board|topic)=[^#"]+?)(#[^"]*?)?$~', 'redirectexit_callback', $setLocation);
	}

	// Maybe integrations want to change where we are heading?]]></search>
			<add><![CDATA[	if (!empty($modSettings['queryless_urls']) && (empty($context['server']['is_cgi']) || ini_get('cgi.fix_pathinfo') == 1 || @get_cfg_var('cgi.fix_pathinfo') == 1) && (!empty($context['server']['is_apache']) || !empty($context['server']['is_lighttpd']) || !empty($context['server']['is_litespeed'])))
	{
		if (defined('SID') && SID != '')
			$setLocation = preg_replace_callback('~^' . preg_quote($scripturl, '~') . '\?(?:' . SID . '(?:;|&|&amp;))((?:board|topic)=[^#]+?)(#[^"]*?)?$~', 'redirectexit_callback', $setLocation);
		else
			$setLocation = preg_replace_callback('~^' . preg_quote($scripturl, '~') . '\?((?:board|topic)=[^#"]+?)(#[^"]*?)?$~', 'redirectexit_callback', $setLocation);
	}

	// Maybe integrations want to change where we are heading?]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		{
			$context['user']['avatar']['href'] = $user_info['avatar']['url'];

			if ($modSettings['avatar_action_too_large'] == 'option_html_resize' || $modSettings['avatar_action_too_large'] == 'option_js_resize')
			{
				if (!empty($modSettings['avatar_max_width_external']))
					$context['user']['avatar']['width'] = $modSettings['avatar_max_width_external'];

				if (!empty($modSettings['avatar_max_height_external']))
					$context['user']['avatar']['height'] = $modSettings['avatar_max_height_external'];
			}
		}
		// Gravatars URL.
		elseif ($user_info['avatar']['url'] === 'gravatar')
			$context['user']['avatar']['href'] = '//www.gravatar.com/avatar/' . md5(strtolower($user_settings['email_address'])) . 'd=' . $modSettings['avatar_max_height_external'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');
		// Otherwise we assume it's server stored?
		elseif ($user_info['avatar']['url'] !== '')
			$context['user']['avatar']['href'] = $modSettings['avatar_url'] . '/' . htmlspecialchars($user_info['avatar']['url']);]]></search>
			<add><![CDATA[		{
			$context['user']['avatar']['href'] = $user_info['avatar']['url'];

			if (!empty($modSettings['avatar_max_width']))
				$context['user']['avatar']['width'] = $modSettings['avatar_max_width'];

			if (!empty($modSettings['avatar_max_height']))
				$context['user']['avatar']['height'] = $modSettings['avatar_max_height'];
		}
		// Gravatars URL.
		elseif ($user_info['avatar']['url'] === 'gravatar')
			$context['user']['avatar']['href'] = '//www.gravatar.com/avatar/' . md5(strtolower($user_settings['email_address'])) . 'd=' . $modSettings['avatar_max_height'] . (!empty($modSettings['gravatar_rating']) ? ('&amp;r=' . $modSettings['gravatar_rating']) : '');
		// Otherwise we assume it's server stored?
		elseif ($user_info['avatar']['url'] !== '')
			$context['user']['avatar']['href'] = $modSettings['avatar_url'] . '/' . htmlspecialchars($user_info['avatar']['url']);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			});
		});', true);

	// Resize avatars the fancy, but non-GD requiring way.
	if ($modSettings['avatar_action_too_large'] == 'option_js_resize' && (!empty($modSettings['avatar_max_width_external']) || !empty($modSettings['avatar_max_height_external'])))
	{
		// @todo Move this over to script.js?
		addInlineJavascript('
		var elk_avatarMaxWidth = ' . (int) $modSettings['avatar_max_width_external'] . ',
			elk_avatarMaxHeight = ' . (int) $modSettings['avatar_max_height_external'] . ';' . (!isBrowser('is_ie8') ? '
		window.addEventListener("load", elk_avatarResize, false);' : '
		window.attachEvent("load", elk_avatarResize);'), true);
	}

	// This looks weird, but it's because BoardIndex.controller.php references the variable.
	$context['common_stats']['latest_member'] = array(
		'id' => $modSettings['latestMember'],]]></search>
			<add><![CDATA[			});
		});', true);

	// This looks weird, but it's because BoardIndex.controller.php references the variable.
	$context['common_stats']['latest_member'] = array(
		'id' => $modSettings['latestMember'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$combiner = new Site_Combiner(CACHEDIR, $boardurl . '/cache');
			$combine_name = $combiner->site_js_combine($context['javascript_files'], $do_defered);

			if (!empty($combine_name))
				echo '
	<script src="', $combine_name, '" id="jscombined', $do_defered ? 'bottom' : 'top', '"></script>';]]></search>
			<add><![CDATA[			$combiner = new Site_Combiner(CACHEDIR, $boardurl . '/cache');
			$combine_name = $combiner->site_js_combine($context['javascript_files'], $do_defered);

			call_integration_hook('post_javascript_combine', array(&$combine_name, $combiner));

			if (!empty($combine_name))
				echo '
	<script src="', $combine_name, '" id="jscombined', $do_defered ? 'bottom' : 'top', '"></script>';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$combiner = new Site_Combiner(CACHEDIR, $boardurl . '/cache');
			$combine_name = $combiner->site_css_combine($context['css_files']);

			if (!empty($combine_name))
				echo '
	<link rel="stylesheet" href="', $combine_name, '" id="csscombined" />';]]></search>
			<add><![CDATA[			$combiner = new Site_Combiner(CACHEDIR, $boardurl . '/cache');
			$combine_name = $combiner->site_css_combine($context['css_files']);

			call_integration_hook('post_css_combine', array(&$combine_name, $combiner));

			if (!empty($combine_name))
				echo '
	<link rel="stylesheet" href="', $combine_name, '" id="csscombined" />';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		template_show_error('security_controls_ban');
	}

	// Any special notices to remind the admin about?
	if (!empty($context['warning_controls']))
	{]]></search>
			<add><![CDATA[		template_show_error('security_controls_ban');
	}

	if (!empty($context['new_version_updates']))
	{
		template_show_error('new_version_updates');
	}

	// Any special notices to remind the admin about?
	if (!empty($context['warning_controls']))
	{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		return $value;
	else
		return false;
}]]></search>
			<add><![CDATA[		return $value;
	else
		return false;
}]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/Admin.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function action_credits()
	{
		global $forum_version, $txt, $scripturl, $context, $user_info;

		// We need a little help from our friends
		require_once(SUBSDIR . '/Membergroups.subs.php');]]></search>
			<add><![CDATA[	 */
	public function action_credits()
	{
		global $forum_version, $txt, $scripturl, $context, $user_info, $modSettings;

		// We need a little help from our friends
		require_once(SUBSDIR . '/Membergroups.subs.php');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Load in the admin quick tasks
		$context['quick_admin_tasks'] = getQuickAdminTasks();
	}

	/**
	 * This function allocates out all the search stuff.]]></search>
			<add><![CDATA[
		// Load in the admin quick tasks
		$context['quick_admin_tasks'] = getQuickAdminTasks();

		$index = 'new_in_' . str_replace(array('ElkArte ', '.'), array('', '_'), FORUM_VERSION);
		if (!empty($modSettings[$index]) && isset($txt[$index]))
		{
			$context['latest_updates'] = replaceBasicActionUrl($txt[$index]);
			require_once(SUBSDIR . '/Themes.subs.php');

			updateThemeOptions(array(1, $user_info['id'], 'dismissed_' . $index, 1));
		}
	}

	/**
	 * This function allocates out all the search stuff.]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/CoreFeatures.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			),
			// ih = Integration Hooks Handling.
			'ih' => array(
				'url' => 'action=admin;area=addonsettings;sa=hooks',
				'settings' => array(
					'handlinghooks_enabled' => 1,
				),]]></search>
			<add><![CDATA[			),
			// ih = Integration Hooks Handling.
			'ih' => array(
				'url' => 'action=admin;area=maintain;sa=hooks',
				'settings' => array(
					'handlinghooks_enabled' => 1,
				),]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/Maintenance.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function action_database()
	{
		global $context, $db_type, $modSettings, $maintenance;

		// We need this, really..
		require_once(SUBSDIR . '/Maintenance.subs.php');]]></search>
			<add><![CDATA[	 */
	public function action_database()
	{
		global $context, $modSettings, $maintenance, $iknowitmaybeunsafe;

		// We need this, really..
		require_once(SUBSDIR . '/Maintenance.subs.php');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Set up the sub-template
		$context['sub_template'] = 'maintain_database';

		if ($db_type == 'mysql')
		{
			$body_type = fetchBodyType();
]]></search>
			<add><![CDATA[		// Set up the sub-template
		$context['sub_template'] = 'maintain_database';

		if (DB_TYPE == 'MySQL')
		{
			$body_type = fetchBodyType();
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$current_time_limit = ini_get('max_execution_time');
		@set_time_limit(159); //something strange just to be sure
		$new_time_limit = ini_get('max_execution_time');

		$context['use_maintenance'] = 0;
]]></search>
			<add><![CDATA[		$current_time_limit = ini_get('max_execution_time');
		@set_time_limit(159); //something strange just to be sure
		$new_time_limit = ini_get('max_execution_time');
		@set_time_limit($current_time_limit);

		$context['use_maintenance'] = 0;
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$context['use_maintenance'] = 1;
			$context['suggested_method'] = 'plain_text';
		}
	}

	/**]]></search>
			<add><![CDATA[			$context['use_maintenance'] = 1;
			$context['suggested_method'] = 'plain_text';
		}

		loadTemplate('Packages');
		loadLanguage('Packages');

		// $context['package_ftp'] may be set action_backup_display when an error occur
		if (!isset($context['package_ftp']))
		{
			$context['package_ftp'] = array(
				'form_elements_only' => true,
				'server' => '',
				'port' => '',
				'username' => '',
				'path' => '',
				'error' => '',
			);
		}
		$context['skip_security'] = !empty($iknowitmaybeunsafe);
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function action_backup_display()
	{
		validateToken('admin-maint');

		// Administrators only!]]></search>
			<add><![CDATA[	 */
	public function action_backup_display()
	{
		global $context, $txt, $user_info;

		validateToken('admin-maint');

		// Administrators only!]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		checkSession('post');

		require_once(SOURCEDIR . '/DumpDatabase.php');
		DumpDatabase2();
	}]]></search>
			<add><![CDATA[
		checkSession('post');

		if (empty($iknowitmaybeunsafe))
		{
			require_once(SUBSDIR . '/FtpConnection.class.php');

			$ftp = new Ftp_Connection($_POST['ftp_server'], $_POST['ftp_port'],$_POST['ftp_username'], $_POST['ftp_password']);

			if ($ftp->error === false)
			{
				// I know, I know... but a lot of people want to type /home/xyz/... which is wrong, but logical.
				if (!$ftp->chdir($_POST['ftp_path']))
				{
					$ftp_error = $ftp->error;
					$ftp->chdir(preg_replace('~^/home[2]?/[^/]+?~', '', $_POST['ftp_path']));
				}
			}

			// If we had an error...
			if ($ftp->error !== false)
			{
				loadLanguage('Packages');
				$ftp_error = $ftp->last_message === null ? (isset($txt['package_ftp_' . $ftp->error]) ? $txt['package_ftp_' . $ftp->error] : '') : $ftp->last_message;

				// Fill the boxes for a FTP connection with data from the previous attempt
				$context['package_ftp'] = array(
					'form_elements_only' => 1,
					'server' => $_POST['ftp_server'],
					'port' => $_POST['ftp_port'],
					'username' => $_POST['ftp_username'],
					'path' => $_POST['ftp_path'],
					'error' => empty($ftp_error) ? null : $ftp_error,
				);

				return $this->action_database();
			}
		}

		require_once(SUBSDIR . '/Admin.subs.php');

		emailAdmins('admin_backup_database', array(
			'BAK_REALNAME' => $user_info['name']
		));
		logAction('database_backup', array('member' => $user_info['id']), 'admin');

		require_once(SOURCEDIR . '/DumpDatabase.php');
		DumpDatabase2();
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		return list_integration_hooks_data($start, $per_page, $sort);
	}
}]]></search>
			<add><![CDATA[	{
		return list_integration_hooks_data($start, $per_page, $sort);
	}
}]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageAttachments.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
							// Add a link to the topic in case of an attachment.
							if ($context[\'browse_type\'] !== \'avatars\')
								$date .= sprintf(\'<br />%1$s <a href="%2$s?topic=%3$d.0.msg%4$d#msg%4$d">%5$s</a>\', $txt[\'in\'], $scripturl, $rowData[\'id_topic\'], $rowData[\'id_msg\'], $rowData[\'subject\']);

							return $date;
							'),]]></search>
			<add><![CDATA[
							// Add a link to the topic in case of an attachment.
							if ($context[\'browse_type\'] !== \'avatars\')
								$date .= sprintf(\'<br />%1$s <a href="%2$s?topic=%3$d.msg%4$d#msg%4$d">%5$s</a>\', $txt[\'in\'], $scripturl, $rowData[\'id_topic\'], $rowData[\'id_msg\'], $rowData[\'subject\']);

							return $date;
							'),]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageAvatars.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$context['post_url'] = $scripturl . '?action=admin;area=manageattachments;save;sa=avatars';
		Settings_Form::prepare_db($config_vars);

		// Add a layer for the javascript.
		Template_Layers::getInstance()->add('avatar_settings');
		$context['sub_template'] = 'show_settings';
	}

	/**
	 * This method retrieves and returns avatar settings.
	 *
	 * - It also returns avatar-related permissions profile_server_avatar,
	 * profile_upload_avatar, profile_remote_avatar, profile_gvatar.
	 * - Initializes the avatarSettings form.
	 */
	private function _initAvatarSettingsForm()]]></search>
			<add><![CDATA[		$context['post_url'] = $scripturl . '?action=admin;area=manageattachments;save;sa=avatars';
		Settings_Form::prepare_db($config_vars);

		$context['sub_template'] = 'show_settings';
	}

	/**
	 * This method retrieves and returns avatar settings.
	 *
	 * - It also returns the avatar-related permission profile_set_avatar.
	 * - Initializes the avatarSettings form.
	 */
	private function _initAvatarSettingsForm()]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$config_vars = array(
			array('title', 'avatar_settings'),
				array('check', 'avatar_default'),
			// Server stored avatars!
			array('title', 'avatar_server_stored'),
				array('warning', empty($testImg) ? 'avatar_img_enc_warning' : ''),
				array('permissions', 'profile_server_avatar', 0, $txt['avatar_server_stored_groups']),
				array('text', 'avatar_directory', 40, 'invalid' => !$context['valid_avatar_dir']),
				array('text', 'avatar_url', 40),
			// External avatars?
			array('title', 'avatar_external'),
				array('permissions', 'profile_remote_avatar', 0, $txt['avatar_external_url_groups']),
				array('check', 'avatar_download_external', 0, 'onchange' => 'fUpdateStatus();'),
				array('text', 'avatar_max_width_external', 'subtext' => $txt['zero_for_no_limit'], 6),
				array('text', 'avatar_max_height_external', 'subtext' => $txt['zero_for_no_limit'], 6),
				array('select', 'avatar_action_too_large',
					array(
						'option_refuse' => $txt['option_refuse'],
						'option_html_resize' => $txt['option_html_resize'],
						'option_js_resize' => $txt['option_js_resize'],
						'option_download_and_resize' => $txt['option_download_and_resize'],
					),
				),
			array('title','gravatar'),
				array('permissions', 'profile_gvatar', 0, $txt['gravatar_groups']),
				array('select', 'gravatar_rating',
					array(
						'g' => 'g',]]></search>
			<add><![CDATA[		$config_vars = array(
			array('title', 'avatar_settings'),
				array('check', 'avatar_default'),
				array('text', 'avatar_max_width', 'subtext' => $txt['zero_for_no_limit'], 6),
				array('text', 'avatar_max_height', 'subtext' => $txt['zero_for_no_limit'], 6),
				array('select', 'avatar_action_too_large',
					array(
						'option_refuse' => $txt['option_refuse'],
						'option_resize' => $txt['option_resize'],
						'option_download_and_resize' => $txt['option_download_and_resize'],
					),
				),
				array('permissions', 'profile_set_avatar', 0, $txt['profile_set_avatar']),
			// Server stored avatars!
			array('title', 'avatar_server_stored'),
				array('warning', empty($testImg) ? 'avatar_img_enc_warning' : ''),
				array('check', 'avatar_stored_enabled'),
				array('text', 'avatar_directory', 40, 'invalid' => !$context['valid_avatar_dir']),
				array('text', 'avatar_url', 40),
			// External avatars?
			array('title', 'avatar_external'),
				array('check', 'avatar_external_enabled'),
				array('check', 'avatar_download_external', 0, 'onchange' => 'fUpdateStatus();'),
			array('title','gravatar'),
				array('check', 'avatar_gravatar_enabled'),
				array('select', 'gravatar_rating',
					array(
						'g' => 'g',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				),
			// Uploadable avatars?
			array('title', 'avatar_upload'),
				array('permissions', 'profile_upload_avatar', 0, $txt['avatar_upload_groups']),
				array('text', 'avatar_max_width_upload', 'subtext' => $txt['zero_for_no_limit'], 6),
				array('text', 'avatar_max_height_upload', 'subtext' => $txt['zero_for_no_limit'], 6),
				array('check', 'avatar_resize_upload', 'subtext' => $txt['avatar_resize_upload_note']),
				array('check', 'avatar_reencode'),
			'',
				array('warning', 'avatar_paranoid_warning'),
				array('check', 'avatar_paranoid'),
			'',]]></search>
			<add><![CDATA[				),
			// Uploadable avatars?
			array('title', 'avatar_upload'),
				array('check', 'avatar_upload_enabled'),
			array('title', 'avatar_resize_options'),
				array('check', 'avatar_reencode'),
				array('warning', 'avatar_paranoid_warning'),
				array('check', 'avatar_paranoid'),
			'',]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageLanguages.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
			// Now we have the id_theme we can get the pretty description.
			if (!empty($themes))
				$context['themes'] = getBasicThemeInfos($themes);
		}

		// Before we go to far can we make anything writable, eh, eh?]]></search>
			<add><![CDATA[
			// Now we have the id_theme we can get the pretty description.
			if (!empty($themes))
				$context['theme_names'] = getBasicThemeInfos($themes);
		}

		// Before we go to far can we make anything writable, eh, eh?]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageSearch.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			{
				if (!empty($modSettings['sphinx_searchd_server']) && !empty($modSettings['sphinxql_searchd_port']))
				{
					$result = @mysql_connect(($modSettings['sphinx_searchd_server'] === 'localhost' ? '127.0.0.1' : $modSettings['sphinx_searchd_server']) . ':' . (int) $modSettings['sphinxql_searchd_port']);
					if ($result === false)
					{
						$context['settings_message'][] = $txt['sphinxql_test_connect_failed'];]]></search>
			<add><![CDATA[			{
				if (!empty($modSettings['sphinx_searchd_server']) && !empty($modSettings['sphinxql_searchd_port']))
				{
					$result = @mysqli_connect(($modSettings['sphinx_searchd_server'] === 'localhost' ? '127.0.0.1' : $modSettings['sphinx_searchd_server']), '', '', '', (int) $modSettings['sphinxql_searchd_port']);
					if ($result === false)
					{
						$context['settings_message'][] = $txt['sphinxql_test_connect_failed'];]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageSearchEngines.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			foreach ($context['spider_logs']['rows'] as $k => $row)
			{
				// Feature disabled?
				if (empty($row['viewing']['value']) && isset($modSettings['spider_mode']) && $modSettings['spider_mode'] < 3)
					$context['spider_logs']['rows'][$k]['viewing']['value'] = '<em>' . $txt['spider_disabled'] . '</em>';
				else
					$urls[$k] = array($row['viewing']['value'], -1);
			}

			// Now stick in the new URLs.
			require_once(SUBSDIR . '/Who.subs.php');
			$urls = determineActions($urls, 'whospider_');
			foreach ($urls as $k => $new_url)
				$context['spider_logs']['rows'][$k]['viewing']['value'] = $new_url;
		}

		$context['page_title'] = $txt['spider_logs'];]]></search>
			<add><![CDATA[			foreach ($context['spider_logs']['rows'] as $k => $row)
			{
				// Feature disabled?
				if (empty($row['data']['viewing']['value']) && isset($modSettings['spider_mode']) && $modSettings['spider_mode'] < 3)
					$context['spider_logs']['rows'][$k]['data']['viewing']['value'] = '<em>' . $txt['spider_disabled'] . '</em>';
				else
					$urls[$k] = array($row['data']['viewing']['value'], -1);
			}

			// Now stick in the new URLs.
			require_once(SUBSDIR . '/Who.subs.php');
			$urls = determineActions($urls, 'whospider_');
			foreach ($urls as $k => $new_url)
				$context['spider_logs']['rows'][$k]['data']['viewing']['value'] = $new_url;
		}

		$context['page_title'] = $txt['spider_logs'];]]></add>
		</operation>
	</file>
	<file name="ADMINDIR/ManageThemes.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 *
 * @todo Update this for the new package manager?]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 *
 * @todo Update this for the new package manager?]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	private function _action_edit_submit()
	{
		global $context, $settings;

		$selectedTheme = isset($_GET['th']) ? (int) $_GET['th'] : (isset($_GET['id']) ? (int) $_GET['id'] : 0);
		if (empty($selectedTheme))]]></search>
			<add><![CDATA[	 */
	private function _action_edit_submit()
	{
		global $context, $settings, $user_info;

		$selectedTheme = isset($_GET['th']) ? (int) $_GET['th'] : (isset($_GET['id']) ? (int) $_GET['id'] : 0);
		if (empty($selectedTheme))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			if ($is_php)
			{
				require_once(SUBSDIR . '/DataValidator.class.php');

				$validator = new Data_Validator();
				$validator->validation_rules(array(]]></search>
			<add><![CDATA[			if ($is_php)
			{
				require_once(SUBSDIR . '/DataValidator.class.php');
				require_once(SUBSDIR . '/Modlog.subs.php');

				// Since we are running php code, let's track it, but only once in a while.
				if (!recentlyLogged('editing_theme', 60))
				{
					logAction('editing_theme', array('member' => $user_info['id']), 'admin');

					// But the email only once every 10 minutes should be fine
					if (!recentlyLogged('editing_theme', 600))
					{
						require_once(SUBSDIR . '/Themes.subs.php');
						require_once(SUBSDIR . '/Admin.subs.php');

						$theme_info = getBasicThemeInfos($context['theme_id']);
						emailAdmins('editing_theme', array(
							'EDIT_REALNAME' => $user_info['name'],
							'FILE_EDITED' => $_REQUEST['filename'],
							'THEME_NAME' => $theme_info[$context['theme_id']],
						));
					}
				}

				$validator = new Data_Validator();
				$validator->validation_rules(array(]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Display.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'can_unlike' => $message['use_likes'] && $message['you_liked'],
			'like_counter' => $message['like_count'],
			'likes_enabled' => !empty($modSettings['likes_enabled']) && ($message['use_likes'] || ($message['like_count'] != 0)),
		);

		if (!empty($output['modified']['name']))]]></search>
			<add><![CDATA[			'can_unlike' => $message['use_likes'] && $message['you_liked'],
			'like_counter' => $message['like_count'],
			'likes_enabled' => !empty($modSettings['likes_enabled']) && ($message['use_likes'] || ($message['like_count'] != 0)),
			'classes' => array(),
		);

		if (!empty($output['modified']['name']))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		call_integration_hook('integrate_prepare_display_context', array(&$output, &$message));

		$counter++;

		return $output;]]></search>
			<add><![CDATA[
		call_integration_hook('integrate_prepare_display_context', array(&$output, &$message));

		$output['classes'] = implode(' ', $output['classes']);

		$counter++;

		return $output;]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Emailpost.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function pbe_load_text(&$html, $email_message, $pbe)
{
	if ($html && preg_match_all('~<table.*?>~i', $email_message->body, $matches) >= 2)
	{
		// Some mobile responses wrap everything in a table structure so use plain text
		$text = $email_message->plain_body;
		$html = false;
	}
	else
		$text = $email_message->body;

	// Convert to BBC and format it so it looks like a post
	$text = pbe_Email_to_bbc($text, $html);
	$pbe['profile']['real_name'] = isset($pbe['profile']['real_name']) ? $pbe['profile']['real_name'] : '';
	$text = pbe_fix_email_body($text, $html, $pbe['profile']['real_name'], (empty($email_message->_converted_utf8) ? $email_message->headers['x-parameters']['content-type']['charset'] : 'UTF-8'));
]]></search>
			<add><![CDATA[ */
function pbe_load_text(&$html, $email_message, $pbe)
{
	if (!$html || ($html && preg_match_all('~<table.*?>~i', $email_message->body, $match) >= 2))
	{
		// Some mobile responses wrap everything in a table structure so use plain text
		$text = $email_message->plain_body;
		$html = false;
	}
	else
		$text = un_htmlspecialchars($email_message->body);

	// Run filters now, before the data is manipulated
	$text = pbe_filter_email_message($text);

	// Convert to BBC and format it so it looks like a post
	$text = pbe_email_to_bbc($text, $html);

	$pbe['profile']['real_name'] = isset($pbe['profile']['real_name']) ? $pbe['profile']['real_name'] : '';
	$text = pbe_fix_email_body($text, $html, $pbe['profile']['real_name'], (empty($email_message->_converted_utf8) ? $email_message->headers['x-parameters']['content-type']['charset'] : 'UTF-8'));
]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/News.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 *
 */]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 *
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (empty($modSettings['queryless_urls']) || ($context['server']['is_cgi'] && ini_get('cgi.fix_pathinfo') == 0 && @get_cfg_var('cgi.fix_pathinfo') == 0) || (!$context['server']['is_apache'] && !$context['server']['is_lighttpd']))
		return $val;

	$val = preg_replace_callback('~^' . preg_quote($scripturl, '/') . '\?((?:board|topic)=[^#"]+)(#[^"]*)?$~', 'fix_possible_url_callback', $val);
	return $val;
}
]]></search>
			<add><![CDATA[	if (empty($modSettings['queryless_urls']) || ($context['server']['is_cgi'] && ini_get('cgi.fix_pathinfo') == 0 && @get_cfg_var('cgi.fix_pathinfo') == 0) || (!$context['server']['is_apache'] && !$context['server']['is_lighttpd']))
		return $val;

	$val = preg_replace_callback('~^' . preg_quote($scripturl, '~') . '\?((?:board|topic)=[^#"]+)(#[^"]*)?$~', 'fix_possible_url_callback', $val);
	return $val;
}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				echo fix_possible_url($val), '</', $key, '>';
		}
	}
}]]></search>
			<add><![CDATA[				echo fix_possible_url($val), '</', $key, '>';
		}
	}
}]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Profile.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						'function' => 'action_activateaccount',
						'sc' => 'get',
						'token' => 'profile-aa%u',
						'permission' => array(
							'own' => array(),
							'any' => array('moderate_forum'),]]></search>
			<add><![CDATA[						'function' => 'action_activateaccount',
						'sc' => 'get',
						'token' => 'profile-aa%u',
						'token_type' => 'get',
						'permission' => array(
							'own' => array(),
							'any' => array('moderate_forum'),]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Recent.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				if (!isset($context['icon_sources'][$row['last_icon']]))
					$context['icon_sources'][$row['last_icon']] = file_exists($settings['theme_dir'] . '/images/post/' . $row['last_icon'] . '.png') ? 'images_url' : 'default_images_url';
			}

			// And build the array.
			$context['topics'][$row['id_topic']] = array(]]></search>
			<add><![CDATA[				if (!isset($context['icon_sources'][$row['last_icon']]))
					$context['icon_sources'][$row['last_icon']] = file_exists($settings['theme_dir'] . '/images/post/' . $row['last_icon'] . '.png') ? 'images_url' : 'default_images_url';
			}
			else
			{
				if (!isset($context['icon_sources'][$row['first_icon']]))
					$context['icon_sources'][$row['first_icon']] = 'images_url';

				if (!isset($context['icon_sources'][$row['last_icon']]))
					$context['icon_sources'][$row['last_icon']] = 'images_url';
			}

			// And build the array.
			$context['topics'][$row['id_topic']] = array(]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Register.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'pm_ignore_list',
			'smiley_set',
			'personal_text', 'avatar',
			'lngfile',
			'secret_question', 'secret_answer',
		);
		$possible_ints = array(
			'pm_email_notify',
			'notify_types',
			'id_theme',
		);
		$possible_floats = array(
			'time_offset',]]></search>
			<add><![CDATA[			'pm_ignore_list',
			'smiley_set',
			'personal_text', 'avatar',
			'lngfile', 'location',
			'secret_question', 'secret_answer',
			'website_url', 'website_title',
		);
		$possible_ints = array(
			'pm_email_notify',
			'notify_types',
			'id_theme',
			'gender',
		);
		$possible_floats = array(
			'time_offset',]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/SplitTopics.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 * Original module by Mach8 - We'll never forget you.
 */]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 * Original module by Mach8 - We'll never forget you.
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($messageInfo['id_first_msg'] == $splitAt)
		{
			$this->_new_topic_subject = $messageInfo['subject'];
			return $this->action_splitSelectTopics();
		}
]]></search>
			<add><![CDATA[		if ($messageInfo['id_first_msg'] == $splitAt)
		{
			$this->_new_topic_subject = $messageInfo['subject'];
			$this->_set_session_values();
			return $this->action_splitSelectTopics();
		}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Check the session to make sure they meant to do this.
		checkSession();

		// Clean up the subject.
		if (isset($_POST['subname']))
			$this->_new_topic_subject = trim(Util::htmlspecialchars($_POST['subname']));

		if (empty($this->_new_topic_subject))
			$this->_new_topic_subject = $txt['new_topic'];

		if (empty($_SESSION['move_to_board']))
		{
			$context['move_to_board'] = !empty($_POST['move_to_board']) ? (int) $_POST['move_to_board'] : 0;
			$context['reason'] = !empty($_POST['reason']) ? trim(Util::htmlspecialchars($_POST['reason'], ENT_QUOTES)) : '';
		}
		else
		{
			$context['move_to_board'] = (int) $_SESSION['move_to_board'];
			$context['reason'] = trim(Util::htmlspecialchars($_SESSION['reason']));
		}

		$_SESSION['move_to_board'] = $context['move_to_board'];
		$_SESSION['reason'] = $context['reason'];

		// Redirect to the selector if they chose selective.
		if ($_POST['step2'] == 'selective')
			return $this->action_splitSelectTopics();

		// We work with them topics.
		require_once(SUBSDIR . '/Topic.subs.php');
		require_once(SUBSDIR . '/Boards.subs.php');

		// Make sure they can see the board they are trying to move to (and get whether posts count in the target board).
		if (!empty($_POST['messageRedirect']) && empty($context['reason']))
			fatal_lang_error('splittopic_no_reason', false);

		// Before the actual split because of the fatal_lang_errors
		$boards = splitDestinationBoard();

		$splitAt = (int) $_POST['at'];
		$messagesToBeSplit = array();]]></search>
			<add><![CDATA[		// Check the session to make sure they meant to do this.
		checkSession();

		// Set the form options in to session
		$this->_set_session_values();

		// Cant post an empty redirect topic
		if (!empty($_SESSION['messageRedirect']) && empty($_SESSION['reason']))
		{
			$this->_unset_session_values();
			fatal_lang_error('splittopic_no_reason', false);
		}

		// Redirect to the selector if they chose selective.
		if ($_POST['step2'] == 'selective')
		{
			if (!empty($_POST['at']))
				$_SESSION['split_selection'][$topic][] = (int) $_POST['at'];
			return $this->action_splitSelectTopics();
		}

		// We work with them topics.
		require_once(SUBSDIR . '/Topic.subs.php');
		require_once(SUBSDIR . '/Boards.subs.php');

		// Make sure they can see the board they are trying to move to
		// (and get whether posts count in the target board).
		// Before the actual split because of the fatal_lang_errors
		$boards = splitDestinationBoard($_SESSION['move_to_board']);

		$splitAt = (int) $_POST['at'];
		$messagesToBeSplit = array();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$messagesToBeSplit[] = $splitAt;
		// There's another action?!
		else
			fatal_lang_error('no_access', false);

		$context['old_topic'] = $topic;
		$context['new_topic'] = splitTopic($topic, $messagesToBeSplit, $this->_new_topic_subject);
		$context['page_title'] = $txt['split_topic'];
		$context['sub_template'] = 'split_successful';

		splitAttemptMove($boards, $context['new_topic']);
	}

	/**]]></search>
			<add><![CDATA[			$messagesToBeSplit[] = $splitAt;
		// There's another action?!
		else
		{
			$this->_unset_session_values();
			fatal_lang_error('no_access', false);
		}

		$context['old_topic'] = $topic;
		$context['new_topic'] = splitTopic($topic, $messagesToBeSplit, $_SESSION['new_topic_subject']);
		$context['page_title'] = $txt['split_topic'];
		$context['sub_template'] = 'split_successful';

		splitAttemptMove($boards, $context['new_topic']);

		// Create a link to this in the old topic.
		// @todo Does this make sense if the topic was unapproved before? We are not yet sure if the resulting topic is unapproved.
		if ($_SESSION['messageRedirect'])
			postSplitRedirect($_SESSION['reason'], $_SESSION['new_topic_subject'], $boards['destination'], $context['new_topic']);

		$this->_unset_session_values();
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		require_once(SUBSDIR . '/Topic.subs.php');

		// Default the subject in case it's blank.
		if (isset($_POST['subname']))
			$this->_new_topic_subject = trim(Util::htmlspecialchars($_POST['subname']));
		if (empty($this->_new_topic_subject))
			$this->_new_topic_subject = $txt['new_topic'];

		// You must've selected some messages!  Can't split out none!
		if (empty($_SESSION['split_selection'][$topic]))
			fatal_lang_error('no_posts_selected', false);

		if (!empty($_POST['messageRedirect']) && empty($context['reason']))
			fatal_lang_error('splittopic_no_reason', false);

		$context['move_to_board'] = !empty($_POST['move_to_board']) ? (int) $_POST['move_to_board'] : 0;
		$reason = !empty($_POST['reason']) ? trim(Util::htmlspecialchars($_POST['reason'], ENT_QUOTES)) : '';

		// Make sure they can see the board they are trying to move to (and get whether posts count in the target board).
		if (!empty($_POST['messageRedirect']) && empty($reason))
			fatal_lang_error('splittopic_no_reason', false);

		// This is here because there are two fatal_lang_errors in there
		$boards = splitDestinationBoard();

		$context['old_topic'] = $topic;
		$context['new_topic'] = splitTopic($topic, $_SESSION['split_selection'][$topic], $this->_new_topic_subject);
		$context['page_title'] = $txt['split_topic'];
		$context['sub_template'] = 'split_successful';

		splitAttemptMove($boards, $context['new_topic']);
	}

	/**]]></search>
			<add><![CDATA[
		require_once(SUBSDIR . '/Topic.subs.php');

		// You must've selected some messages!  Can't split out none!
		if (empty($_SESSION['split_selection'][$topic]))
		{
			$this->_unset_session_values();
			fatal_lang_error('no_posts_selected', false);
		}

		// This is here because there are two fatal_lang_errors in there
		$boards = splitDestinationBoard($_SESSION['move_to_board']);

		$context['old_topic'] = $topic;
		$context['new_topic'] = splitTopic($topic, $_SESSION['split_selection'][$topic], $_SESSION['new_topic_subject']);
		$context['page_title'] = $txt['split_topic'];
		$context['sub_template'] = 'split_successful';

		splitAttemptMove($boards, $context['new_topic']);

		// Create a link to this in the old topic.
		// @todo Does this make sense if the topic was unapproved before? We are not yet sure if the resulting topic is unapproved.
		if ($_SESSION['messageRedirect'])
			postSplitRedirect($_SESSION['reason'], $_SESSION['new_topic_subject'], $boards['destination'], $context['new_topic']);

		$this->_unset_session_values();
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// This is a special case for split topics from quick-moderation checkboxes
		if (isset($_REQUEST['subname_enc']))
			$this->_new_topic_subject = urldecode($_REQUEST['subname_enc']);

		$context['move_to_board'] = !empty($_SESSION['move_to_board']) ? (int) $_SESSION['move_to_board'] : 0;
		$context['reason'] = !empty($_SESSION['reason']) ? trim(Util::htmlspecialchars($_SESSION['reason'])) : '';

		require_once(SUBSDIR . '/Topic.subs.php');
		require_once(SUBSDIR . '/Messages.subs.php');]]></search>
			<add><![CDATA[
		// This is a special case for split topics from quick-moderation checkboxes
		if (isset($_REQUEST['subname_enc']))
		{
			$this->_new_topic_subject = urldecode($_REQUEST['subname_enc']);
			$this->_set_session_values();
		}

		require_once(SUBSDIR . '/Topic.subs.php');
		require_once(SUBSDIR . '/Messages.subs.php');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		$context['topic'] = array(
			'id' => $topic,
			'subject' => urlencode($this->_new_topic_subject),
		);

		// Some stuff for our favorite template.
		$context['new_subject'] = $this->_new_topic_subject;

		// Using the "select" sub template.
		$context['sub_template'] = isset($_REQUEST['xml']) ? 'split' : 'select';]]></search>
			<add><![CDATA[
		$context['topic'] = array(
			'id' => $topic,
			'subject' => urlencode($_SESSION['new_topic_subject']),
		);

		// Some stuff for our favorite template.
		$context['new_subject'] = $_SESSION['new_topic_subject'];

		// Using the "select" sub template.
		$context['sub_template'] = isset($_REQUEST['xml']) ? 'split' : 'select';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($context['selected']['start'] >= $context['selected']['num_messages'])
			$context['selected']['start'] = $context['selected']['num_messages'] <= $context['messages_per_page'] ? 0 : ($context['selected']['num_messages'] - (($context['selected']['num_messages'] % $context['messages_per_page']) == 0 ? $context['messages_per_page'] : ($context['selected']['num_messages'] % $context['messages_per_page'])));

		$page_index_url = $scripturl . '?action=splittopics;sa=selectTopics;subname=' . strtr(urlencode($this->_new_topic_subject), array('%' => '%%')) . ';topic=' . $topic;
		// Build a page list of the not-selected topics...
		$context['not_selected']['page_index'] = constructPageIndex($page_index_url . '.%1$d;start2=' . $context['selected']['start'], $context['not_selected']['start'], $context['not_selected']['num_messages'], $context['messages_per_page'], true);
]]></search>
			<add><![CDATA[		if ($context['selected']['start'] >= $context['selected']['num_messages'])
			$context['selected']['start'] = $context['selected']['num_messages'] <= $context['messages_per_page'] ? 0 : ($context['selected']['num_messages'] - (($context['selected']['num_messages'] % $context['messages_per_page']) == 0 ? $context['messages_per_page'] : ($context['selected']['num_messages'] % $context['messages_per_page'])));

		$page_index_url = $scripturl . '?action=splittopics;sa=selectTopics;subname=' . strtr(urlencode($_SESSION['new_topic_subject']), array('%' => '%%')) . ';topic=' . $topic;
		// Build a page list of the not-selected topics...
		$context['not_selected']['page_index'] = constructPageIndex($page_index_url . '.%1$d;start2=' . $context['selected']['start'], $context['not_selected']['start'], $context['not_selected']['num_messages'], $context['messages_per_page'], true);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			}
		}
	}
}]]></search>
			<add><![CDATA[			}
		}
	}

	/**
	 * Set the values for this split session
	 */
	private function _set_session_values()
	{
		global $txt;

		// Clean up the subject.
		if (isset($_POST['subname']) && empty($this->_new_topic_subject))
			$this->_new_topic_subject = trim(Util::htmlspecialchars($_POST['subname']));

		if (empty($this->_new_topic_subject))
			$this->_new_topic_subject = $txt['new_topic'];

		// Save in session so its available across all the form pages
		if (empty($_SESSION['move_to_board']))
		{
			$_SESSION['move_to_board'] = (!empty($_POST['move_new_topic']) && !empty($_POST['move_to_board'])) ? (int) $_POST['move_to_board'] : 0;
			$_SESSION['reason'] = !empty($_POST['reason']) ? trim(Util::htmlspecialchars($_POST['reason'], ENT_QUOTES)) : '';
			$_SESSION['messageRedirect'] = !empty($_POST['messageRedirect']);
			$_SESSION['new_topic_subject'] = $this->_new_topic_subject;
		}
	}

	/**
	 * Clear out this split session
	 */
	private function _unset_session_values()
	{
		unset(
			$_SESSION['move_to_board'],
			$_SESSION['reason'],
			$_SESSION['messageRedirect'],
			$_SESSION['split_selection'],
			$_SESSION['new_topic_subject']
		);
	}
}]]></add>
		</operation>
	</file>
	<file name="CONTROLLERDIR/Topic.controller.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	public function action_index()
	{
		// Call the right method, if it ain't done yet.
		// this is done by the dispatcher, so lets leave it alone...
		// we don't want to assume what it means if the user doesn't
		// send us a ?sa=, do we? (lock topics out of nowhere?)
		// Unless... we can printpage()
	}

	/**]]></search>
			<add><![CDATA[	 */
	public function action_index()
	{
		global $topic;

		// Call the right method, if it ain't done yet.
		// this is done by the dispatcher, so lets leave it alone...
		// we don't want to assume what it means if the user doesn't
		// send us a ?sa=, do we? (lock topics out of nowhere?)
		// Unless... we can printpage()

		// Without anything it throws an error, so redirect somewhere
		if (!empty($topic))
			redirectexit('topic=' . $topic . '.0');
		else
			redirectexit();
	}

	/**]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Action.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 * @param string $default default action if unknown sa is requested
	 * @return string
	 */
	public function initialize($subactions, $default = '')
	{
		if ($this->_name !== null)
			call_integration_hook('integrate_sa_' . $this->_name, array(&$subactions));]]></search>
			<add><![CDATA[	 * @param string $default default action if unknown sa is requested
	 * @return string
	 */
	public function initialize(&$subactions, $default = '')
	{
		if ($this->_name !== null)
			call_integration_hook('integrate_sa_' . $this->_name, array(&$subactions));]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// I said... can't.
		trigger_error('No access...', E_USER_ERROR);
	}
}]]></search>
			<add><![CDATA[		// I said... can't.
		trigger_error('No access...', E_USER_ERROR);
	}
}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/AddonSettings.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[							unset($temp_hooks[$hook][$function_o]);
						}
						// OOP a bit more difficult
						elseif (!empty($class) && preg_match('~class\s*' . preg_quote(trim($class)) . '.*function\s*' . preg_quote(trim($function)) . '\s*\(~i', $fc) != 0)
						{
							$hook_status[$hook][$hook_name]['exists'] = true;
							$hook_status[$hook][$hook_name]['in_file'] = $file['name'];]]></search>
			<add><![CDATA[							unset($temp_hooks[$hook][$function_o]);
						}
						// OOP a bit more difficult
						elseif (!empty($class) && preg_match('~class\s*' . preg_quote(trim($class)) . '.*function\s*' . preg_quote(trim($function), '~') . '\s*\(~i', $fc) != 0)
						{
							$hook_status[$hook][$hook_name]['exists'] = true;
							$hook_status[$hook][$hook_name]['in_file'] = $file['name'];]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	foreach ($hooks as $hook => $functions)
	{
		$hooks_filters[] = '<option ' . ($context['current_filter'] == $hook ? 'selected="selected" ' : '') . ' value="">' . $hook . '</option>';
		foreach ($functions as $function)
		{
			$function = str_replace(']', '', $function);]]></search>
			<add><![CDATA[
	foreach ($hooks as $hook => $functions)
	{
		$hooks_filters[] = '<option ' . ($context['current_filter'] == $hook ? 'selected="selected" ' : '') . ' value="' . $hook . '">' . $hook . '</option>';
		foreach ($functions as $function)
		{
			$function = str_replace(']', '', $function);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	return $integration_hooks;
}]]></search>
			<add><![CDATA[	}

	return $integration_hooks;
}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Editor.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$bbc_tags['row2'] = array(
			array('quote', 'code', 'table'),
			array('bulletlist', 'orderedlist', 'horizontalrule'),
			array('spoiler', 'footnote'),
			array('image', 'link', 'email'),
		);
]]></search>
			<add><![CDATA[		$bbc_tags['row2'] = array(
			array('quote', 'code', 'table'),
			array('bulletlist', 'orderedlist', 'horizontalrule'),
			array('spoiler', 'footnote', 'splittag'),
			array('image', 'link', 'email'),
		);
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/EmailFormat.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 * @param string $real_name
	 * @param string $charset
	 */
	public function reflow($data, $html = false, $real_name = '', $charset = 'UTF-8')
	{
		global $modSettings;
]]></search>
			<add><![CDATA[	 * @param string $real_name
	 * @param string $charset
	 */
	public function reflow($data, $html = false, $real_name = '', $charset = 'UTF-8', $bbc_br = true)
	{
		global $modSettings;
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$this->_maillist_sig_keys = empty($modSettings['maillist_sig_keys']) ? '' : $modSettings['maillist_sig_keys'];

		$this->_real_name = $real_name;
		$this->_prep_data($data);
		$this->_fix_body();
		$this->_clean_up($charset);
]]></search>
			<add><![CDATA[		$this->_maillist_sig_keys = empty($modSettings['maillist_sig_keys']) ? '' : $modSettings['maillist_sig_keys'];

		$this->_real_name = $real_name;
		$this->_prep_data($data, $bbc_br);
		$this->_fix_body();
		$this->_clean_up($charset);
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 *
	 * @param string $data
	 */
	private function _prep_data($data)
	{
		// Un-wordwrap the email, create a line by line array broken on the newlines
		$temp = explode("\n", $data);

		// Remove any 'stuck' whitespace using the trim value function on all lines]]></search>
			<add><![CDATA[	 *
	 * @param string $data
	 */
	private function _prep_data($data, $bbc_br)
	{
		// Un-wordwrap the email, create a line by line array broken on the newlines
		if ($bbc_br === true)
			$data = str_replace('[br]', "\n", $data);
		$temp = explode("\n", $data);

		// Remove any 'stuck' whitespace using the trim value function on all lines]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Close any open quotes we may have left behind
		for ($quotes = 1; $quotes <= $this->_in_quote; $quotes++)
			$this->_body_array[$i + $quotes] = '[/quote]';

		// Join the message back together while dropping null index's
		$temp = array();]]></search>
			<add><![CDATA[
		// Close any open quotes we may have left behind
		for ($quotes = 1; $quotes <= $this->_in_quote; $quotes++)
			$this->_body_array[$i + $quotes]['content'] = '[/quote]';

		// Join the message back together while dropping null index's
		$temp = array();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// The line is simply just their name
		elseif (($this->_body_array[$i]['content'] === $this->_real_name) && !$this->_found_sig)
			return true;

		return false;
	}]]></search>
			<add><![CDATA[		// The line is simply just their name
		elseif (($this->_body_array[$i]['content'] === $this->_real_name) && !$this->_found_sig)
			return true;
		// check for universal sig dashes
		elseif (!$this->_found_sig && preg_match('~^-- \n~m', $this->_body_array[$i]['content']))
			return true;

		return false;
	}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Emailpost.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$tags = array(
		'~\*\*(.*)\*\*~isUe' => '\'**\'.ltrim(\'$1\').\'**\'',
		'~<\*>~i' => '&lt;*&gt;',]]></search>
			<add><![CDATA[	$tags = array(
		'~\*\*\s?(.*?)\*\*~is' => '**$1**',
		'~<\*>~i' => '&lt;*&gt;',]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// We are starting with HTML, our goal is to convert the best parts of it to BBC,
	if ($html)
	{
		// Convert the email-HTML to BBC
		$text = preg_replace(array_keys($tags), array_values($tags), $text);
		require_once(SUBSDIR . '/Html2BBC.class.php');
		$bbc_converter = new Html_2_BBC($text);
		$text = $bbc_converter->get_bbc();

		// Run our parsers, as defined in the ACP,  to remove the original "replied to" message
		// before we do any more work.
		$text_save = $text;
		$result = pbe_parse_email_message($text);

		// If we have no message left after running the parser, then they may have replied
		// below and/or inside the original message. People like this should not be allowed
		// to use the net, or be forced to read their own messed up emails
		if (empty($result) || (trim(strip_tags(pbe_filter_email_message($text))) === ''))
			$text = $text_save;
	}
	// Starting with plain text, possibly even markdown style ;)
	else
	{
		// Run the parser to try and remove common mail clients "reply to" stuff
		$text_save = $text;
		$result = pbe_parse_email_message($text);

		// Bottom feeder?  If we have no message they could have replied below the original message
		if (empty($result) || trim(strip_tags(pbe_filter_email_message($text))) === '')
			$text = $text_save;

		// Set a gmail flag for special quote processing since its quotes are strange
		$gmail = (bool) preg_match('~<div class="gmail_quote">~i', $text);]]></search>
			<add><![CDATA[	// We are starting with HTML, our goal is to convert the best parts of it to BBC,
	if ($html)
	{
		// upfront pre-process $tags, mostly for the email template strings
		$text = preg_replace(array_keys($tags), array_values($tags), $text);

		// Run the parsers on the html
		$text = pbe_run_parsers($text);

		// Convert the email-HTML to BBC
		require_once(SUBSDIR . '/Html2BBC.class.php');
		$bbc_converter = new Html_2_BBC($text);
		$bbc_converter->skip_tags(array('font', 'span'));
		$bbc_converter->skip_styles(array('font-family', 'font-size', 'color'));
		$text = $bbc_converter->get_bbc();
	}
	// Starting with plain text, possibly even markdown style ;)
	else
	{
		// Run the parser to try and remove common mail clients "reply to" stuff
		$text = pbe_run_parsers($text);

		// Set a gmail flag for special quote processing since its quotes are strange
		$gmail = (bool) preg_match('~<div class="gmail_quote">~i', $text);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

/**
 * Prepares the email body so that it looks like a forum post
 *
 * What it does:]]></search>
			<add><![CDATA[}

/**
 * Runs the ACP email parsers
 *	 - returns cut email or original if the cut would result in a blank message
 *
 * @param string $text
 * @return string
 */
function pbe_run_parsers($text)
{
	// Run our parsers, as defined in the ACP,  to remove the original "replied to" message
	$text_save = $text;
	$result = pbe_parse_email_message($text);

	// If we have no message left after running the parser, then they may have replied
	// below and/or inside the original message. People like this should not be allowed
	// to use the net, or be forced to read their own messed up emails
	if (empty($result) || (trim(strip_tags(pbe_filter_email_message($text))) === ''))
		$text = $text_save;

	return $text;
}

/**
 * Prepares the email body so that it looks like a forum post
 *
 * What it does:]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$body = pbe_fix_client_quotes($body);

	// Attempt to remove any exposed email addresses that are in the reply
	$body = preg_replace('~>' . $txt['to'] . '(.*)@(.*?)\n~i', '', $body);
	$body = preg_replace('~\b\s?[a-z0-9._%+-]+@[a-zZ0-9.-]+\.[a-z]{2,4}\b.?' . $txt['email_wrote'] . ':\s?~i', '', $body);
	$body = preg_replace('~<(.*?)>(.*@.*?)\n~', '$1' . "\n", $body);
	$body = preg_replace('~' . $txt['email_quoting'] . ' (.*) (?:<|&lt;|\[email\]).*?@.*?(?:>|&gt;|\[/email\]):~i', '', $body);

	// Remove multiple sequential blank lines, again
	$body = preg_replace('~(\n){3,}~si', "\n\n", $body);

	// Check for blank quotes
	$body = preg_replace('~(\[quote(.*)?\]\s*(\[br\]\s*)?\[/quote\])~s', '', $body);

	// Reflow and Cleanup this message to something that looks normal-er
	require_once(SUBSDIR . '/EmailFormat.class.php');]]></search>
			<add><![CDATA[	$body = pbe_fix_client_quotes($body);

	// Attempt to remove any exposed email addresses that are in the reply
	$body = preg_replace('~>' . $txt['to'] . '(.*)@(.*?)(?:\n|\[br\])~i', '', $body);
	$body = preg_replace('~\b\s?[a-z0-9._%+-]+@[a-zZ0-9.-]+\.[a-z]{2,4}\b.?' . $txt['email_wrote'] . ':\s?~i', '', $body);
	$body = preg_replace('~<(.*?)>(.*@.*?)(?:\n|\[br\])~', '$1' . "\n", $body);
	$body = preg_replace('~' . $txt['email_quoting'] . ' (.*) (?:<|&lt;|\[email\]).*?@.*?(?:>|&gt;|\[/email\]):~i', '', $body);

	// Remove multiple sequential blank lines, again
	$body = preg_replace('~(\n\s?){3,}~si', "\n\n", $body);

	// Check for blank quotes
	$body = preg_replace('~(\[quote\s?([a-zA-Z0-9"=]*)?\]\s*(\[br\]\s*)?\[/quote\])~s', '', $body);

	// Reflow and Cleanup this message to something that looks normal-er
	require_once(SUBSDIR . '/EmailFormat.class.php');]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	// --- in some group name "John Smith" <johnsmith@tardis.com> wrote:
	$regex[] = '~---\s.*?"(.*)"\s+' . $txt['email_wrote'] . ':\s(\[quote\])?~i';
	// --- in some@group.name John Smith wrote
	$regex[] = '~---\s.*?\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,6}\b,\s(.*?)\s' . $txt['email_wrote'] . ':?~i';

	// For each one see if we can do a nice [quote author=john smith]
	foreach ($regex as $reg)]]></search>
			<add><![CDATA[	// --- in some group name "John Smith" <johnsmith@tardis.com> wrote:
	$regex[] = '~---\s.*?"(.*)"\s+' . $txt['email_wrote'] . ':\s(\[quote\])?~i';
	// --- in some@group.name John Smith wrote
	$regex[] = '~---\s.*?\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,6}\b,\s(.*?)\s' . $txt['email_wrote'] . ':?~iu';
	// --- In some@g..., "someone"  wrote:
	$regex[] = '~---\s.*?\b[A-Z0-9._%+-]+@[A-Z0-9][.]{3}, [A-Z0-9._%+\-"]+\b(.*?)\s' . $txt['email_wrote'] . ':?~iu';
	// --- In [email]something[/email] "someone" wrote:
	$regex[] = '~---\s.*?\[email=.*?/email\],?\s"?(.*?)"?\s' . $txt['email_wrote'] . ':?~iu';

	// For each one see if we can do a nice [quote author=john smith]
	foreach ($regex as $reg)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				$quote[1] = preg_replace('~\[email\].*\[\/email\]~', '', $quote[1]);
				$body = pbe_str_replace_once($quote[0], "\n" . '[quote author=' . trim($quote[1]) . "]\n", $body);

				// Look for [quote author=][/quote][quote] issues
				$body = pbe_str_replace_once('[quote author=' . trim($quote[1]) . "]\n\n" . '[/quote][quote]', '[quote author=' . trim($quote[1]) . "]\n", $body);

				// And [quote author=][quote] .... [/quote] issues
				$body = preg_replace('~\[quote author=' . trim($quote[1]) . '\][\n]{2,3}\[quote\]~', '[quote author=' . trim($quote[1]) . "]\n", $body);
			}
		}
	}]]></search>
			<add><![CDATA[				$quote[1] = preg_replace('~\[email\].*\[\/email\]~', '', $quote[1]);
				$body = pbe_str_replace_once($quote[0], "\n" . '[quote author=' . trim($quote[1]) . "]\n", $body);

				$quote[1] = preg_quote($quote[1], '~');

				// Look for [quote author=][/quote][quote] issues
				$body = preg_replace('~\[quote author=' . trim($quote[1]) . '\] ?(?:\n|\[br\] ?){2,4} ?\[\/quote\] ?\[quote\]~u', '[quote author=' . trim($quote[1]) . "]\n", $body, 1);

				// And [quote author=][quote] newlines [/quote] issues
				$body = preg_replace('~\[quote author=' . trim($quote[1]) . '\] ?(?:\n|\[br\] ?){2,4}\[quote\]~u', '[quote author=' . trim($quote[1]) . "]\n", $body);
			}
		}
	}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Html2BBC.class.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	protected $_skip_tags = array();

	/**
	 * Gets everything started using the built in or external parser
	 *
	 * @param string $html string of html to convert
	 * @param boolean $strip flag to strip unconverted tags, true by default
	 */
	public function __construct($html, $strip = true)
	{
		// Up front, remove whitespace between html tags
		$html = preg_replace('/(?:(?<=\>)|(?<=\/\>))(\s+)(?=\<\/?)/', '', $html);
		$this->strip_newlines = $strip;

		// Using PHP built in functions ...]]></search>
			<add><![CDATA[	protected $_skip_tags = array();

	/**
	 * Holds any style attributes that would normally be convert to bbc but are instead skipped
	 * @var string[]
	 */
	protected $_skip_style = array();

	/**
	 * Gets everything started using the built in or external parser
	 *
	 * @param string $html string of html to convert
	 * @param boolean $strip flag to strip newlines, true by default
	 */
	public function __construct($html, $strip = true)
	{
		// Up front, remove whitespace between html tags
		$html = preg_replace('/(?:(?<=\>)|(?<=\/\>))(\s+)(?=\<\/?)/', '', $html);
		$html = strtr($html, array('[' => '&amp#91;', ']' => '&amp#93;'));
		$this->strip_newlines = $strip;

		// Using PHP built in functions ...]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	/**
	 * Loads the html body and sends it to the parsing loop to convert all
	 * DOM nodes to BBC
	 */]]></search>
			<add><![CDATA[	}

	/**
	 * If we want to skip over inline style tags (that would normally be converted)
	 *
	 * @param string[] $styles
	 */
	public function skip_styles($styles = array())
	{
		// If its not an array, make it one
		if (!is_array($styles))
			$styles = array($styles);

		if (!empty($styles))
			$this->_skip_style = $styles;
	}

	/**
	 * Loads the html body and sends it to the parsing loop to convert all
	 * DOM nodes to BBC
	 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($this->_parser)
		{
			// Using the internal DOM methods we need to do a little extra work
			$bbc = html_entity_decode(htmlspecialchars_decode($bbc, ENT_QUOTES));

			if (preg_match('~<body>(.*)</body>~s', $bbc, $body))
				$bbc = $body[1];
		}]]></search>
			<add><![CDATA[		if ($this->_parser)
		{
			// Using the internal DOM methods we need to do a little extra work
			if (preg_match('~<body>(.*)</body>~s', $bbc, $body))
				$bbc = $body[1];
		}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$bbc = trim($bbc);
		$bbc = preg_replace('~^(?:\[br\s*\/?\]\s*)+~', '', $bbc);
		$bbc = preg_replace('~(?:\[br\s*\/?\]\s*)+$~', '', $bbc);
		$bbc = str_replace('[hr][br]', '[hr]', $bbc);

		// Remove any html tags we left behind ( outside of code tags that is )]]></search>
			<add><![CDATA[		$bbc = trim($bbc);
		$bbc = preg_replace('~^(?:\[br\s*\/?\]\s*)+~', '', $bbc);
		$bbc = preg_replace('~(?:\[br\s*\/?\]\s*)+$~', '', $bbc);
		$bbc = preg_replace('~\s?(\[br\])\s?~', '[br]', $bbc);
		$bbc = str_replace('[hr][br]', '[hr]', $bbc);

		// Remove any html tags we left behind ( outside of code tags that is )]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$face = $node->getAttribute('face');
		$bbc = $this->_get_innerHTML($node);

		if (!empty($size))
		{
			// All this for a depreciated tag attribute :P
			$size = (int) $size;
			$size = $this->sizes_equivalence[$size];
			$bbc = '[size=' . $size . ']' . $bbc . '[/size]';
		}
		if (!empty($face))
			$bbc  = '[font=' . strtolower($face). ']' . $bbc . '[/font]';
		if (!empty($color))
			$bbc  = '[color=' . strtolower($color) . ']' . $bbc . '[/color]';

		return $bbc;
	}

	/**]]></search>
			<add><![CDATA[		$face = $node->getAttribute('face');
		$bbc = $this->_get_innerHTML($node);

		// Font / size can't span across certain tags with our bbc parser, so fix them now
		$blocks = preg_split('~(\[hr\]|\[quote\])~s', $bbc, 2, PREG_SPLIT_DELIM_CAPTURE);

		if (!empty($size))
		{
			// All this for a depreciated tag attribute :P
			$size = (int) $size;
			$size = $this->sizes_equivalence[$size];
			$blocks[0] = '[size=' . $size . ']' . $blocks[0] . '[/size]';
		}
		if (!empty($face))
			$blocks[0]  = '[font=' . strtolower($face). ']' . $blocks[0] . '[/font]';
		if (!empty($color))
			$blocks[0]  = '[color=' . strtolower($color) . ']' . $blocks[0] . '[/color]';

		return implode('', $blocks);
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$styles = $this->_get_style_values($style);
			foreach ($styles as $tag => $value)
			{
				// Well this can be as long, complete and exhaustive as we want :P
				switch ($tag)
				{]]></search>
			<add><![CDATA[			$styles = $this->_get_style_values($style);
			foreach ($styles as $tag => $value)
			{
				// Skip any inline styles as needed
				if (in_array($tag, $this->_skip_style))
					continue;

				// Well this can be as long, complete and exhaustive as we want :P
				switch ($tag)
				{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						// Only get the first font if there's a list
						if (strpos($value, ',') !== false)
							$value = substr($value, 0, strpos($value, ','));
						$bbc .= '[font=' . strtr($value, array("'" => '')) . ']' . $bbc . '[/font]';
						break;
					case 'font-weight':
						if ($value === 'bold' || $value === 'bolder' || $value == '700' || $value == '600')]]></search>
			<add><![CDATA[						// Only get the first font if there's a list
						if (strpos($value, ',') !== false)
							$value = substr($value, 0, strpos($value, ','));
						$bbc = '[font=' . strtr($value, array("'" => '')) . ']' . $bbc . '[/font]';
						break;
					case 'font-weight':
						if ($value === 'bold' || $value === 'bolder' || $value == '700' || $value == '600')]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						$bbc = '[size=' . $value . ']' . $bbc . '[/size]';
						break;
					case 'color':
							$bbc = '[color=' . $value . ']' . $bbc . '[/color]';
					// These tags all mean the same thing as far as BBC is concerned
					case 'float':
					case 'text-align':]]></search>
			<add><![CDATA[						$bbc = '[size=' . $value . ']' . $bbc . '[/size]';
						break;
					case 'color':
						$bbc = '[color=' . $value . ']' . $bbc . '[/color]';
						break;
					// These tags all mean the same thing as far as BBC is concerned
					case 'float':
					case 'text-align':]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($this->_parser)
			return $node->nodeValue;
		else
			return html_entity_decode(htmlspecialchars_decode($node->innertext, ENT_QUOTES), ENT_QUOTES, 'UTF-8');
	}

	/**]]></search>
			<add><![CDATA[		if ($this->_parser)
			return $node->nodeValue;
		else
			return $node->innertext;
	}

	/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if ($this->_parser)
		{
			if (version_compare(PHP_VERSION, '5.3.6') >= 0)
				return htmlspecialchars_decode($this->doc->saveHTML($node));
			else
			{
				// @todo remove when 5.3.6 min]]></search>
			<add><![CDATA[		if ($this->_parser)
		{
			if (version_compare(PHP_VERSION, '5.3.6') >= 0)
				return $this->doc->saveHTML($node);
			else
			{
				// @todo remove when 5.3.6 min]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					$html = $body[1];

				// Clean it up
				$html = rtrim($html, "\n");
				return html_entity_decode(htmlspecialchars_decode($html, ENT_QUOTES), ENT_QUOTES, 'UTF-8');
			}
		}
		else]]></search>
			<add><![CDATA[					$html = $body[1];

				// Clean it up
				return rtrim($html, "\n");
			}
		}
		else]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	 */
	private function _recursive_decode($text)
	{
		$text = preg_replace('/&amp;([a-zA-Z0-9]{2,7});/', '&$1;', $text, -1, $count);
		if ($count)
			$this->_recursive_decode($text);

		return html_entity_decode(htmlspecialchars_decode($text, ENT_QUOTES), ENT_QUOTES, 'UTF-8');
	}
}]]></search>
			<add><![CDATA[	 */
	private function _recursive_decode($text)
	{
		do
		{
			$text = preg_replace('/&amp;([a-zA-Z0-9]{2,7});/', '&$1;', $text, -1, $count);
		} while (!empty($count));

		$text = html_entity_decode(htmlspecialchars_decode($text, ENT_QUOTES), ENT_QUOTES, 'UTF-8');

		return str_replace(array('&amp#91;', '&amp#93;'), array('&amp;#91;', '&amp;#93;'), $text);
	}
}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/ManagePermissions.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		'send_email_to_members',
		'profile_view_any',
		'profile_extra_own',
		'profile_server_avatar',
		'profile_upload_avatar',
		'profile_remote_avatar',
		'profile_remove_own',
	));
	$groupLevels['board']['standard'] = array_merge($groupLevels['board']['restrict'], array(]]></search>
			<add><![CDATA[		'send_email_to_members',
		'profile_view_any',
		'profile_extra_own',
		'profile_set_avatar',
		'profile_remove_own',
	));
	$groupLevels['board']['standard'] = array_merge($groupLevels['board']['restrict'], array(]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'profile_extra' => array(true, 'profile'),
			'profile_title' => array(true, 'profile'),
			'profile_remove' => array(true, 'profile'),
			'profile_server_avatar' => array(false, 'profile'),
			'profile_upload_avatar' => array(false, 'profile'),
			'profile_remote_avatar' => array(false, 'profile'),
			'approve_emails' => array(false, 'member_admin'),
		),
		'board' => array(]]></search>
			<add><![CDATA[			'profile_extra' => array(true, 'profile'),
			'profile_title' => array(true, 'profile'),
			'profile_remove' => array(true, 'profile'),
			'profile_set_avatar' => array(false, 'profile'),
			'approve_emails' => array(false, 'member_admin'),
		),
		'board' => array(]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/ManageSearch.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	sql_attr_timestamp	= poster_time
	sql_attr_timestamp	= relevance
	sql_attr_timestamp	= num_replies
	sql_query_info		= \
		SELECT * \
		FROM ', $db_prefix, 'messages \
		WHERE id_msg = $id
}

source elkarte_delta_source : elkarte_source]]></search>
			<add><![CDATA[	sql_attr_timestamp	= poster_time
	sql_attr_timestamp	= relevance
	sql_attr_timestamp	= num_replies
}

source elkarte_delta_source : elkarte_source]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	stopwords		= ' . $modSettings['sphinx_stopword_path'], '
	min_word_len	= 2
	charset_type	= utf-8
	charset_table	= 0..9, A..Z->a..z, _, a..z
}

index elkarte_delta_index : elkarte_base_index]]></search>
			<add><![CDATA[	stopwords		= ' . $modSettings['sphinx_stopword_path'], '
	min_word_len	= 2
	charset_type	= utf-8
	charset_table	= 0..9, A..Z->a..z, _, a..z, U+451->U+435, U+401->U+435, U+410..U+42F->U+430..U+44F, U+430..U+44F
	ignore_chars	= -, U+AD
}

index elkarte_delta_index : elkarte_base_index]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
searchd
{
	listen					= ', (empty($modSettings['sphinx_searchd_port']) ? 3312 : (int) $modSettings['sphinx_searchd_port']), '
	listen					= ', (empty($modSettings['sphinxql_searchd_port']) ? 3313 : (int) $modSettings['sphinxql_searchd_port']), ':mysql41
	log						= ', $modSettings['sphinx_log_path'], '/searchd.log
	query_log				= ', $modSettings['sphinx_log_path'], '/query.log
	read_timeout			= 5
	max_children			= 30
	compat_sphinxql_magics	= 1
	pid_file				= ', $modSettings['sphinx_data_path'], '/searchd.pid
	max_matches				= ', (empty($modSettings['sphinx_max_results']) ? 3312 : (int) $modSettings['sphinx_max_results']), '
}
';
	obExit(false, false);]]></search>
			<add><![CDATA[
searchd
{
	listen					= ', (empty($modSettings['sphinx_searchd_port']) ? 9312 : (int) $modSettings['sphinx_searchd_port']), '
	listen					= ', (empty($modSettings['sphinxql_searchd_port']) ? 9306 : (int) $modSettings['sphinxql_searchd_port']), ':mysql41
	log						= ', $modSettings['sphinx_log_path'], '/searchd.log
	query_log				= ', $modSettings['sphinx_log_path'], '/query.log
	read_timeout			= 5
	max_children			= 30
	pid_file				= ', $modSettings['sphinx_data_path'], '/searchd.pid
	max_matches				= ', (empty($modSettings['sphinx_max_results']) ? 2000 : (int) $modSettings['sphinx_max_results']), '
}
';
	obExit(false, false);]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Membergroups.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	global $scripturl, $txt, $context;

	$db = database();

	$request = $db->query('', '
		SELECT mg.id_group, mg.group_name, mg.min_posts, mg.description, mg.group_type, mg.online_color,]]></search>
			<add><![CDATA[	global $scripturl, $txt, $context;

	$db = database();
	loadLanguage('Admin');

	$request = $db->query('', '
		SELECT mg.id_group, mg.group_name, mg.min_posts, mg.description, mg.group_type, mg.online_color,]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Members.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		'passwd' => validateLoginPassword($regOptions['password'], '', $regOptions['username'], true),
		'password_salt' => substr(md5(mt_rand()), 0, 4) ,
		'posts' => 0,
		'date_registered' => time(),
		'member_ip' => $regOptions['interface'] == 'admin' ? '127.0.0.1' : $regOptions['ip'],
		'member_ip2' => $regOptions['interface'] == 'admin' ? '127.0.0.1' : $regOptions['ip2'],
		'validation_code' => $validation_code,]]></search>
			<add><![CDATA[		'passwd' => validateLoginPassword($regOptions['password'], '', $regOptions['username'], true),
		'password_salt' => substr(md5(mt_rand()), 0, 4) ,
		'posts' => 0,
		'date_registered' => !empty($regOptions['time']) ? $regOptions['time'] : time(),
		'member_ip' => $regOptions['interface'] == 'admin' ? '127.0.0.1' : $regOptions['ip'],
		'member_ip2' => $regOptions['interface'] == 'admin' ? '127.0.0.1' : $regOptions['ip2'],
		'validation_code' => $validation_code,]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Modlog.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'moderate_log' => $id_log,
		)
	);
}]]></search>
			<add><![CDATA[			'moderate_log' => $id_log,
		)
	);
}

/**
 * Checks if an action has been performed "recently"
 *
 * @param string $action Name of the action
 * @param int $time Timeframe since the last time the action has been performed
 */
function recentlyLogged($action, $time = 60)
{
	$db = database();

	$request = $db->query('','
		SELECT COUNT(*)
		FROM {db_prefix}log_actions
		WHERE action = {string:action}
			AND log_time >= {int:last_logged}',
		array(
			'action' => $action,
			'last_logged' => time() - $time,
		)
	);
	list ($present) = $db->fetch_row($request);
	$db->free_result($request);

	return !empty($present);
}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/News.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		FROM {db_prefix}ban_items AS bi
			INNER JOIN {db_prefix}ban_groups AS bg ON (bg.id_ban_group = bi.id_ban_group)
		WHERE (bg.cannot_access = {int:cannot_access} OR bg.cannot_login = {int:cannot_login})
			AND (COALESCE(bg.expire_time, 1=1) OR bg.expire_time > {int:current_time})
			AND bi.email_address != {string:blank_string}',
		array(
			'cannot_access' => 1,
]]></search>
			<add><![CDATA[		FROM {db_prefix}ban_items AS bi
			INNER JOIN {db_prefix}ban_groups AS bg ON (bg.id_ban_group = bi.id_ban_group)
		WHERE (bg.cannot_access = {int:cannot_access} OR bg.cannot_login = {int:cannot_login})
			AND (bg.expire_time IS NULL OR bg.expire_time > {int:current_time})
			AND bi.email_address != {string:blank_string}',
		array(
			'cannot_access' => 1,
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Notification.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			'last_id' => $row['id_last_msg'],
			'topic' => $row['id_topic'],
			'board' => $row['id_board'],
			'name' => $row['poster_name'],
			'exclude' => '',
			'signature' => $row['signature'],
			'attachments' => $row['num_attach'],]]></search>
			<add><![CDATA[			'last_id' => $row['id_last_msg'],
			'topic' => $row['id_topic'],
			'board' => $row['id_board'],
			'name' => $type === 'reply' ? $row['poster_name'] : $user_info['name'],
			'exclude' => '',
			'signature' => $row['signature'],
			'attachments' => $row['num_attach'],]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		SELECT
			mem.id_member, mem.email_address, mem.notify_regularity, mem.notify_types, mem.warning,
			mem.notify_send_body, mem.lngfile, mem.id_group, mem.additional_groups,mem.id_post_group,
			t.id_member_started, b.member_groups, b.name, b.id_profile,
			ln.id_topic, ln.sent
		FROM {db_prefix}log_notify AS ln
			INNER JOIN {db_prefix}members AS mem ON (mem.id_member = ln.id_member)]]></search>
			<add><![CDATA[		SELECT
			mem.id_member, mem.email_address, mem.notify_regularity, mem.notify_types, mem.warning,
			mem.notify_send_body, mem.lngfile, mem.id_group, mem.additional_groups,mem.id_post_group,
			t.id_member_started, b.member_groups, b.name, b.id_profile, b.id_board,
			ln.id_topic, ln.sent
		FROM {db_prefix}log_notify AS ln
			INNER JOIN {db_prefix}members AS mem ON (mem.id_member = ln.id_member)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[{
	global $modSettings;

	$db = database();
	static $board_profile = array();

	// No need to check for you ;)
	if ($row['id_group'] == 1)
		return;

	$allowed = explode(',', $row['member_groups']);
	$row['additional_groups'] = !empty( $row['additional_groups']) ? explode(',', $row['additional_groups']) : array();]]></search>
			<add><![CDATA[{
	global $modSettings;

	static $board_profile = array();

	// No need to check for you ;)
	if ($row['id_group'] == 1)
		return $email_perm;

	$allowed = explode(',', $row['member_groups']);
	$row['additional_groups'] = !empty( $row['additional_groups']) ? explode(',', $row['additional_groups']) : array();]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$email_perm = false;
		else
		{
			// In a group that has email posting permissions on this board
			if (!isset($board_profile[$row['id_profile']]))
			{
				$request = $db->query('', '
					SELECT permission, add_deny, id_group
					FROM {db_prefix}board_permissions
					WHERE id_profile = {int:id_profile}
						AND permission = {string:permission}',
					array(
						'id_profile' => $row['id_profile'],
						'permission' => 'postby_email',
					)
				);
				while ($row_perm = $db->fetch_assoc($request))
					$board_profile[$row['id_profile']][] = $row_perm['id_group'];
				$db->free_result($request);
			}

			// Get the email permission for this board / posting group
			if (count(array_intersect($board_profile[$row['id_profile']], $row['additional_groups'])) === 0)
				$email_perm = false;
		}
	}
}]]></search>
			<add><![CDATA[			$email_perm = false;
		else
		{
			if (!isset($board_profile[$row['id_board']]))
			{
				require_once(SUBSDIR . '/Members.subs.php');
				$board_profile[$row['id_board']] = groupsAllowedTo('postby_email', $row['id_board']);
			}

			// In a group that has email posting permissions on this board
			if (count(array_intersect($board_profile[$row['id_board']]['allowed'], $row['additional_groups'])) === 0)
				$email_perm = false;

			// And not specifically denied?
			if ($email_perm && !empty($modSettings['permission_enable_deny'])
				&& count(array_intersect($row['additional_groups'], $board_profile[$row['id_board']]['denied'])) !== 0)
				$email_perm = false;
		}
	}

	return $email_perm;
}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Package.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ * @param string $url
 * @param string $post_data = ''
 * @param bool $keep_alive = false
 * @param int $redirection_level = 0
 * @return string
 */
function fetch_web_data($url, $post_data = '', $keep_alive = false, $redirection_level = 0)
{
	global $webmaster_email;
	static $keep_alive_dom = null, $keep_alive_fp = null;]]></search>
			<add><![CDATA[ * @param string $url
 * @param string $post_data = ''
 * @param bool $keep_alive = false
 * @param int $redirection_level = 2
 * @return string
 */
function fetch_web_data($url, $post_data = '', $keep_alive = false, $redirection_level = 2)
{
	global $webmaster_email;
	static $keep_alive_dom = null, $keep_alive_fp = null;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Include the file containing the Curl_Fetch_Webdata class.
		require_once(SOURCEDIR . '/CurlFetchWebdata.class.php');

		$fetch_data = new Curl_Fetch_Webdata();
		$fetch_data->get_url_data($url, $post_data);

		// no errors and a 200 result, then we have a good dataset, well we at least have data ;)]]></search>
			<add><![CDATA[		// Include the file containing the Curl_Fetch_Webdata class.
		require_once(SOURCEDIR . '/CurlFetchWebdata.class.php');

		$fetch_data = new Curl_Fetch_Webdata(array(), $redirection_level);
		$fetch_data->get_url_data($url, $post_data);

		// no errors and a 200 result, then we have a good dataset, well we at least have data ;)]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Permission.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0
 */

if (!defined('ELK'))]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 */

if (!defined('ELK'))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		'profile_extra',
		'profile_title',
		'profile_remove',
		'profile_server_avatar',
		'profile_upload_avatar',
		'profile_remote_avatar',
		'profile_view_own',
		'mark_any_notify',
		'mark_notify',]]></search>
			<add><![CDATA[		'profile_extra',
		'profile_title',
		'profile_remove',
		'profile_set_avatar',
		'profile_view_own',
		'mark_any_notify',
		'mark_notify',]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Post.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Trim off trailing quotes - these often happen by accident.
	while (substr($message, -7) == '[quote]')
		$message = substr($message, 0, -7);
	while (substr($message, 0, 8) == '[/quote]')
		$message = substr($message, 8);

	// Find all code blocks, work out whether we'd be parsing them, then ensure they are all closed.
	$in_tag = false;]]></search>
			<add><![CDATA[
	// Trim off trailing quotes - these often happen by accident.
	while (substr($message, -7) == '[quote]')
		$message = trim(substr($message, 0, -7));
	while (substr($message, 0, 8) == '[/quote]')
		$message = trim(substr($message, 8));

	// Find all code blocks, work out whether we'd be parsing them, then ensure they are all closed.
	$in_tag = false;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'~\[(table|/tr)\]([\s' . $non_breaking_space . ']*)\[tr\]~su' => '[$1]$2[_tr_]',
				// Any remaining [tr]s should have a [table] before them.
				'~\[tr\]~s' => '[table][tr]',
				// Look for [/td]s followed by [/tr].
				'~\[/td\]([\s' . $non_breaking_space . ']*)\[/tr\]~su' => '[/td]$1[_/tr_]',
				// Any remaining [/tr]s should have a [/td].
				'~\[/tr\]~s' => '[/td][/tr]',
				// Look for properly opened [li]s which aren't closed.]]></search>
			<add><![CDATA[				'~\[(table|/tr)\]([\s' . $non_breaking_space . ']*)\[tr\]~su' => '[$1]$2[_tr_]',
				// Any remaining [tr]s should have a [table] before them.
				'~\[tr\]~s' => '[table][tr]',
				// Look for [/td]s or [/th]s followed by [/tr].
				'~\[/t([dh])\]([\s' . $non_breaking_space . ']*)\[/tr\]~su' => '[/t$1]$2[_/tr_]',
				// Any remaining [/tr]s should have a [/td].
				'~\[/tr\]~s' => '[/td][/tr]',
				// Look for properly opened [li]s which aren't closed.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				// Images with no real url.
				'~\[img\]https?://.{0,7}\[/img\]~' => '',
				// Font tags with multiple fonts (copy&paste in the WYSIWYG by some browsers).
				'~\[font=\\\'?(.*?)\\\'?(?=\,).*\](.*?(?:\[/font\]))~' => '[font=$1]$2',
			);

			// Fix up some use of tables without [tr]s, etc. (it has to be done more than once to catch it all.)]]></search>
			<add><![CDATA[				// Images with no real url.
				'~\[img\]https?://.{0,7}\[/img\]~' => '',
				// Font tags with multiple fonts (copy&paste in the WYSIWYG by some browsers).
				'~\[font=\\\'?(.*?)\\\'?(?=\,[ \'\"A-Za-z]*\]).*?\](.*?(?:\[/font\]))~s'  => '[font=$1]$2'
			);

			// Fix up some use of tables without [tr]s, etc. (it has to be done more than once to catch it all.)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$new_topic = empty($topicOptions['id']);

	$message_columns = array(
		'id_board' => 'int', 'id_topic' => 'int', 'id_member' => 'int',
		'subject' => 'string-255', 'body' => (!empty($modSettings['max_messageLength']) && $modSettings['max_messageLength'] > 65534 ? 'string-' . $modSettings['max_messageLength'] : (empty($modSettings['max_messageLength']) ? 'string' : 'string-65534')),
		'poster_name' => 'string-255', 'poster_email' => 'string-255',
		'poster_time' => 'int', 'poster_ip' => 'string-255',
		'smileys_enabled' => 'int', 'modified_name' => 'string',
		'icon' => 'string-16', 'approved' => 'int',
	);

	$message_parameters = array(
		'id_board' => $topicOptions['board'], 'id_topic' => $topicOptions['id'],
		'id_member' => $posterOptions['id'], 'subject' => $msgOptions['subject'],
		'body' => $msgOptions['body'],
		'poster_name' => $posterOptions['name'], 'poster_email' => $posterOptions['email'],
		'poster_time' => time(), 'poster_ip' => $posterOptions['ip'],
		'smileys_enabled' => $msgOptions['smileys_enabled'] ? 1 : 0,'modified_name' => '',
		'icon' => $msgOptions['icon'], 'approved' => $msgOptions['approved'],
	);

	// What if we want to do anything with posts?]]></search>
			<add><![CDATA[	$new_topic = empty($topicOptions['id']);

	$message_columns = array(
		'id_board' => 'int',
		'id_topic' => 'int',
		'id_member' => 'int',
		'subject' => 'string-255',
		'body' => (!empty($modSettings['max_messageLength']) && $modSettings['max_messageLength'] > 65534 ? 'string-' . $modSettings['max_messageLength'] : (empty($modSettings['max_messageLength']) ? 'string' : 'string-65534')),
		'poster_name' => 'string-255',
		'poster_email' => 'string-255',
		'poster_time' => 'int',
		'poster_ip' => 'string-255',
		'smileys_enabled' => 'int',
		'modified_name' => 'string',
		'icon' => 'string-16',
		'approved' => 'int',
	);

	$message_parameters = array(
		'id_board' => $topicOptions['board'],
		'id_topic' => $topicOptions['id'],
		'id_member' => $posterOptions['id'],
		'subject' => $msgOptions['subject'],
		'body' => $msgOptions['body'],
		'poster_name' => $posterOptions['name'],
		'poster_email' => $posterOptions['email'],
		'poster_time' => empty($posterOptions['time']) ? time() : $posterOptions['time'],
		'poster_ip' => $posterOptions['ip'],
		'smileys_enabled' => $msgOptions['smileys_enabled'] ? 1 : 0,
		'modified_name' => '',
		'icon' => $msgOptions['icon'],
		'approved' => $msgOptions['approved'],
	);

	// What if we want to do anything with posts?]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Profile.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	$valid_protocol = substr($cur_profile['avatar'], 0, 7) === 'http://' || substr($cur_profile['avatar'], 0, 8) === 'https://';

	// Default context.
	$context['member']['avatar'] += array(
		'custom' => $valid_protocol ? $cur_profile['avatar'] : 'http://',
		'selection' => $valid_protocol ? $cur_profile['avatar'] : '' ,
		'id_attach' => $cur_profile['id_attach'],
		'filename' => $cur_profile['filename'],
		'allow_server_stored' => allowedTo('profile_server_avatar') || (!$context['user']['is_owner'] && allowedTo('profile_extra_any')),
		'allow_upload' => allowedTo('profile_upload_avatar') || (!$context['user']['is_owner'] && allowedTo('profile_extra_any')),
		'allow_external' => allowedTo('profile_remote_avatar') || (!$context['user']['is_owner'] && allowedTo('profile_extra_any')),
		'allow_gravatar' => allowedTo('profile_gravatar') || (!$context['user']['is_owner'] && allowedTo('profile_extra_any')),
	);

	if ($cur_profile['avatar'] == '' && $cur_profile['id_attach'] > 0 && $context['member']['avatar']['allow_upload'])]]></search>
			<add><![CDATA[
	$valid_protocol = substr($cur_profile['avatar'], 0, 7) === 'http://' || substr($cur_profile['avatar'], 0, 8) === 'https://';

	// @todo Temporary
	if ($context['user']['is_owner'])
		$allowedChange = allowedTo('profile_set_avatar') && allowedTo(array('profile_extra_any', 'profile_extra_own'));
	else
		$allowedChange = allowedTo('profile_set_avatar') && allowedTo('profile_extra_any');

	// Default context.
	$context['member']['avatar'] += array(
		'custom' => $valid_protocol ? $cur_profile['avatar'] : 'http://',
		'selection' => $valid_protocol ? $cur_profile['avatar'] : '' ,
		'id_attach' => $cur_profile['id_attach'],
		'filename' => $cur_profile['filename'],
		'allow_server_stored' => !empty($modSettings['avatar_stored_enabled']) && $allowedChange,
		'allow_upload' =>  !empty($modSettings['avatar_upload_enabled']) && $allowedChange,
		'allow_external' =>  !empty($modSettings['avatar_external_enabled']) && $allowedChange,
		'allow_gravatar' =>  !empty($modSettings['avatar_gravatar_enabled']) && $allowedChange,
	);

	if ($cur_profile['avatar'] == '' && $cur_profile['id_attach'] > 0 && $context['member']['avatar']['allow_upload'])]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	$downloadedExternalAvatar = false;
	$valid_http = isset($_POST['userpicpersonal']) && substr($_POST['userpicpersonal'], 0, 7) === 'http://' && strlen($_POST['userpicpersonal']) > 7;
	$valid_https = isset($_POST['userpicpersonal']) && substr($_POST['userpicpersonal'], 0, 8) === 'https://' && strlen($_POST['userpicpersonal']) > 8;
	if ($value == 'external' && allowedTo('profile_remote_avatar') && ($valid_http || $valid_https) && !empty($modSettings['avatar_download_external']))
	{
		loadLanguage('Post');
		if (!is_writable($uploadDir))]]></search>
			<add><![CDATA[	$downloadedExternalAvatar = false;
	$valid_http = isset($_POST['userpicpersonal']) && substr($_POST['userpicpersonal'], 0, 7) === 'http://' && strlen($_POST['userpicpersonal']) > 7;
	$valid_https = isset($_POST['userpicpersonal']) && substr($_POST['userpicpersonal'], 0, 8) === 'https://' && strlen($_POST['userpicpersonal']) > 8;
	if ($value == 'external' && !empty($modSettings['avatar_external_enabled']) && ($valid_http || $valid_https) && !empty($modSettings['avatar_download_external']))
	{
		loadLanguage('Post');
		if (!is_writable($uploadDir))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		removeAttachments(array('id_member' => $memID));
	}
	elseif ($value == 'server_stored' && allowedTo('profile_server_avatar'))
	{
		$profile_vars['avatar'] = strtr(empty($_POST['file']) ? (empty($_POST['cat']) ? '' : $_POST['cat']) : $_POST['file'], array('&amp;' => '&'));
		$profile_vars['avatar'] = preg_match('~^([\w _!@%*=\-#()\[\]&.,]+/)?[\w _!@%*=\-#()\[\]&.,]+$~', $profile_vars['avatar']) != 0 && preg_match('/\.\./', $profile_vars['avatar']) == 0 && file_exists($modSettings['avatar_directory'] . '/' . $profile_vars['avatar']) ? ($profile_vars['avatar'] == 'blank.png' ? '' : $profile_vars['avatar']) : '';]]></search>
			<add><![CDATA[
		removeAttachments(array('id_member' => $memID));
	}
	elseif ($value == 'server_stored' && !empty($modSettings['avatar_stored_enabled']))
	{
		$profile_vars['avatar'] = strtr(empty($_POST['file']) ? (empty($_POST['cat']) ? '' : $_POST['cat']) : $_POST['file'], array('&amp;' => '&'));
		$profile_vars['avatar'] = preg_match('~^([\w _!@%*=\-#()\[\]&.,]+/)?[\w _!@%*=\-#()\[\]&.,]+$~', $profile_vars['avatar']) != 0 && preg_match('/\.\./', $profile_vars['avatar']) == 0 && file_exists($modSettings['avatar_directory'] . '/' . $profile_vars['avatar']) ? ($profile_vars['avatar'] == 'blank.png' ? '' : $profile_vars['avatar']) : '';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		// Get rid of their old avatar. (if uploaded.)
		removeAttachments(array('id_member' => $memID));
	}
	elseif ($value == 'gravatar' && allowedTo('profile_gravatar'))
	{
		$profile_vars['avatar'] = 'gravatar';
]]></search>
			<add><![CDATA[		// Get rid of their old avatar. (if uploaded.)
		removeAttachments(array('id_member' => $memID));
	}
	elseif ($value == 'gravatar' && !empty($modSettings['avatar_gravatar_enabled']))
	{
		$profile_vars['avatar'] = 'gravatar';
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		removeAttachments(array('id_member' => $memID));
	}
	elseif ($value == 'external' && allowedTo('profile_remote_avatar') && ($valid_http || $valid_https) && empty($modSettings['avatar_download_external']))
	{
		// We need these clean...
		$cur_profile['id_attach'] = 0;]]></search>
			<add><![CDATA[
		removeAttachments(array('id_member' => $memID));
	}
	elseif ($value == 'external' && !empty($modSettings['avatar_external_enabled']) && ($valid_http || $valid_https) && empty($modSettings['avatar_download_external']))
	{
		// We need these clean...
		$cur_profile['id_attach'] = 0;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		elseif (!$valid_http && !$valid_https)
			return 'bad_avatar';
		// Should we check dimensions?
		elseif (!empty($modSettings['avatar_max_height_external']) || !empty($modSettings['avatar_max_width_external']))
		{
			// Now let's validate the avatar.
			$sizes = url_image_size($profile_vars['avatar']);

			if (is_array($sizes) && (($sizes[0] > $modSettings['avatar_max_width_external'] && !empty($modSettings['avatar_max_width_external'])) || ($sizes[1] > $modSettings['avatar_max_height_external'] && !empty($modSettings['avatar_max_height_external']))))
			{
				// Houston, we have a problem. The avatar is too large!!
				if ($modSettings['avatar_action_too_large'] == 'option_refuse')]]></search>
			<add><![CDATA[		elseif (!$valid_http && !$valid_https)
			return 'bad_avatar';
		// Should we check dimensions?
		elseif (!empty($modSettings['avatar_max_height']) || !empty($modSettings['avatar_max_width']))
		{
			// Now let's validate the avatar.
			$sizes = url_image_size($profile_vars['avatar']);

			if (is_array($sizes) && (($sizes[0] > $modSettings['avatar_max_width'] && !empty($modSettings['avatar_max_width'])) || ($sizes[1] > $modSettings['avatar_max_height'] && !empty($modSettings['avatar_max_height']))))
			{
				// Houston, we have a problem. The avatar is too large!!
				if ($modSettings['avatar_action_too_large'] == 'option_refuse')]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				{
					// @todo remove this if appropriate
					require_once(SUBSDIR . '/Attachments.subs.php');
					if (saveAvatar($profile_vars['avatar'], $memID, $modSettings['avatar_max_width_external'], $modSettings['avatar_max_height_external']))
					{
						$profile_vars['avatar'] = '';
						$cur_profile['id_attach'] = $modSettings['new_avatar_data']['id'];]]></search>
			<add><![CDATA[				{
					// @todo remove this if appropriate
					require_once(SUBSDIR . '/Attachments.subs.php');
					if (saveAvatar($profile_vars['avatar'], $memID, $modSettings['avatar_max_width'], $modSettings['avatar_max_height']))
					{
						$profile_vars['avatar'] = '';
						$cur_profile['id_attach'] = $modSettings['new_avatar_data']['id'];]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			}
		}
	}
	elseif (($value == 'upload' && allowedTo('profile_upload_avatar')) || $downloadedExternalAvatar)
	{
		if ((isset($_FILES['attachment']['name']) && $_FILES['attachment']['name'] != '') || $downloadedExternalAvatar)
		{]]></search>
			<add><![CDATA[			}
		}
	}
	elseif (($value == 'upload' && !empty($modSettings['avatar_upload_enabled'])) || $downloadedExternalAvatar)
	{
		if ((isset($_FILES['attachment']['name']) && $_FILES['attachment']['name'] != '') || $downloadedExternalAvatar)
		{]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				return 'bad_avatar';
			}
			// Check whether the image is too large.
			elseif ((!empty($modSettings['avatar_max_width_upload']) && $sizes[0] > $modSettings['avatar_max_width_upload']) || (!empty($modSettings['avatar_max_height_upload']) && $sizes[1] > $modSettings['avatar_max_height_upload']))
			{
				if (!empty($modSettings['avatar_resize_upload']))
				{
					// Attempt to chmod it.
					@chmod($_FILES['attachment']['tmp_name'], 0644);

					// @todo remove this require when appropriate
					require_once(SUBSDIR . '/Attachments.subs.php');
					if (!saveAvatar($_FILES['attachment']['tmp_name'], $memID, $modSettings['avatar_max_width_upload'], $modSettings['avatar_max_height_upload']))
					{
						// Something went wrong, so lets delete this offender
						@unlink($_FILES['attachment']['tmp_name']);]]></search>
			<add><![CDATA[				return 'bad_avatar';
			}
			// Check whether the image is too large.
			elseif ((!empty($modSettings['avatar_max_width']) && $sizes[0] > $modSettings['avatar_max_width']) || (!empty($modSettings['avatar_max_height']) && $sizes[1] > $modSettings['avatar_max_height']))
			{
				if (!empty($modSettings['avatar_action_too_large']) && $modSettings['avatar_action_too_large'] == 'option_download_and_resize')
				{
					// Attempt to chmod it.
					@chmod($_FILES['attachment']['tmp_name'], 0644);

					// @todo remove this require when appropriate
					require_once(SUBSDIR . '/Attachments.subs.php');
					if (!saveAvatar($_FILES['attachment']['tmp_name'], $memID, $modSettings['avatar_max_width'], $modSettings['avatar_max_height']))
					{
						// Something went wrong, so lets delete this offender
						@unlink($_FILES['attachment']['tmp_name']);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					$cur_profile['filename'] = $modSettings['new_avatar_data']['filename'];
					$cur_profile['attachment_type'] = $modSettings['new_avatar_data']['type'];
				}
				else
				{
					@unlink($_FILES['attachment']['tmp_name']);]]></search>
			<add><![CDATA[					$cur_profile['filename'] = $modSettings['new_avatar_data']['filename'];
					$cur_profile['attachment_type'] = $modSettings['new_avatar_data']['type'];
				}
				elseif (!empty($modSettings['avatar_action_too_large']) && !empty($modSettings['avatar_reencode']))
				{
					// Attempt to chmod it.
					@chmod($_FILES['attachment']['tmp_name'], 0644);

					require_once(SUBSDIR . '/Graphics.subs.php');
					if (!reencodeImage($_FILES['attachment']['tmp_name'], $sizes[2]))
					{
						@unlink($_FILES['attachment']['tmp_name']);
						return 'bad_avatar';
					}

					// @todo remove this require when appropriate
					require_once(SUBSDIR . '/Attachments.subs.php');
					if (!saveAvatar($_FILES['attachment']['tmp_name'], $memID, $modSettings['avatar_max_width'], $modSettings['avatar_max_height']))
					{
						// Something went wrong, so lets delete this offender
						@unlink($_FILES['attachment']['tmp_name']);
						return 'bad_avatar5';
					}

					// Reset attachment avatar data.
					$cur_profile['id_attach'] = $modSettings['new_avatar_data']['id'];
					$cur_profile['filename'] = $modSettings['new_avatar_data']['filename'];
					$cur_profile['attachment_type'] = $modSettings['new_avatar_data']['type'];
				}
				else
				{
					@unlink($_FILES['attachment']['tmp_name']);]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/ScheduledTask.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		$db = database();

		// First clean out the cache.
		clean_cache();

		// If warning decrement is enabled and we have people who have not had a new warning in 24 hours, lower their warning level.
		list (, , $modSettings['warning_decrement']) = explode(',', $modSettings['warning_settings']);]]></search>
			<add><![CDATA[		$db = database();

		// First clean out the cache.
		clean_cache('data');

		// If warning decrement is enabled and we have people who have not had a new warning in 24 hours, lower their warning level.
		list (, , $modSettings['warning_decrement']) = explode(',', $modSettings['warning_settings']);]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/SearchAPI-Sphinxql.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		if (($cached_results = cache_get_data('searchql_results_' . md5($user_info['query_see_board'] . '_' . $context['params']))) === null)
		{
			// Create an instance of the sphinx client and set a few options.
			$mySphinx = @mysql_connect(($modSettings['sphinx_searchd_server'] === 'localhost' ? '127.0.0.1' : $modSettings['sphinx_searchd_server']) . ':' . (int) $modSettings['sphinxql_searchd_port']);

			// No connection, daemon not running?  log the error
			if ($mySphinx === false)
				fatal_lang_error('error_no_search_daemon');

			// Compile different options for our query
			$query = 'SELECT *' . (empty($search_params['topic']) ? ', COUNT(*) num' : '') . ', (weight() + (relevance/1000)) rank FROM elkarte_index';

			// Construct the (binary mode & |) query.
			$where_match = $this->_constructQuery($search_params['search']);]]></search>
			<add><![CDATA[		if (($cached_results = cache_get_data('searchql_results_' . md5($user_info['query_see_board'] . '_' . $context['params']))) === null)
		{
			// Create an instance of the sphinx client and set a few options.
			$mySphinx = @mysqli_connect(($modSettings['sphinx_searchd_server'] === 'localhost' ? '127.0.0.1' : $modSettings['sphinx_searchd_server']), '', '', '', (int) $modSettings['sphinxql_searchd_port']);

			// No connection, daemon not running?  log the error
			if ($mySphinx === false)
				fatal_lang_error('error_no_search_daemon');

			// Compile different options for our query
			$query = 'SELECT *' . (empty($search_params['topic']) ? ', COUNT(*) num' : '') . ', WEIGHT() weights, (weights + (relevance/1000)) rank FROM elkarte_index';

			// Construct the (binary mode & |) query.
			$where_match = $this->_constructQuery($search_params['search']);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			$query .= ' OPTION field_weights=(subject=' . (!empty($modSettings['search_weight_subject']) ? $modSettings['search_weight_subject'] * 200 : 1000) . ',body=1000)';

			// Execute the search query.
			$request = mysql_query($query, $mySphinx);

			// Can a connection to the daemon be made?
			if ($request === false)
			{
				// Just log the error.
				if (mysql_error($mySphinx))
					log_error(mysql_error($mySphinx));

				fatal_lang_error('error_no_search_daemon');
			}]]></search>
			<add><![CDATA[			$query .= ' OPTION field_weights=(subject=' . (!empty($modSettings['search_weight_subject']) ? $modSettings['search_weight_subject'] * 200 : 1000) . ',body=1000)';

			// Execute the search query.
			$request = mysqli_query($mySphinx, $query);

			// Can a connection to the daemon be made?
			if ($request === false)
			{
				// Just log the error.
				if (mysqli_error($mySphinx))
					log_error(mysqli_error($mySphinx));

				fatal_lang_error('error_no_search_daemon');
			}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				'matches' => array(),
			);

			if (mysql_num_rows($request) != 0)
			{
				while ($match = mysql_fetch_assoc($request))
				{
					if (empty($search_params['topic']))
						$num = isset($match['num']) ? $match['num'] : (isset($match['@count']) ? $match['@count'] : 0);]]></search>
			<add><![CDATA[				'matches' => array(),
			);

			if (mysqli_num_rows($request) != 0)
			{
				while ($match = mysqli_fetch_assoc($request))
				{
					if (empty($search_params['topic']))
						$num = isset($match['num']) ? $match['num'] : (isset($match['@count']) ? $match['@count'] : 0);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[					);
				}
			}
			mysql_free_result($request);
			mysql_close($mySphinx);

			$cached_results['num_results'] = count($cached_results['matches']);
]]></search>
			<add><![CDATA[					);
				}
			}
			mysqli_free_result($request);
			mysqli_close($mySphinx);

			$cached_results['num_results'] = count($cached_results['matches']);
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/SettingsForm.class.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 *
 * Adding options to one of the setting screens isn't hard.]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 *
 * Adding options to one of the setting screens isn't hard.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		foreach ($config_bools as $key)
		{
			if (!empty($_POST[$key]))
				$new_settings[$key] = '1';
			else
				$new_settings[$key] = '0';
		}

		// Save the relevant settings in the Settings.php file.]]></search>
			<add><![CDATA[
		foreach ($config_bools as $key)
		{
			// Check boxes need to be part of this settings form
			if ($this->_array_value_exists__recursive($key, $this->settings()))
			{
				if (!empty($_POST[$key]))
					$new_settings[$key] = '1';
				else
					$new_settings[$key] = '0';
			}
		}

		// Save the relevant settings in the Settings.php file.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			return $this->_config_vars;
		}
	}
}]]></search>
			<add><![CDATA[			return $this->_config_vars;
		}
	}

	/**
	 * Recursively checks if a value exists in an array
	 *
	 * @param string $needle
	 * @param mixed[] $haystack
	 * @return boolean
	 */
	private function _array_value_exists__recursive($needle, $haystack)
	{
		foreach ($haystack as $item)
		{
			if ($item == $needle || (is_array($item) && $this->_array_value_exists__recursive($needle, $item)))
				return true;
		}

		return false;
    }
}]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Themes.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * @copyright ElkArte Forum contributors
 * @license   BSD http://opensource.org/licenses/BSD-3-Clause
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[/**
 * Get a basic list of themes
 *
 * @param int[] $themes
 * @return array
 */
function getBasicThemeInfos($themes)]]></search>
			<add><![CDATA[/**
 * Get a basic list of themes
 *
 * @param int|int[] $themes
 * @return array
 */
function getBasicThemeInfos($themes)]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			AND variable = {string:name}
			AND id_theme IN ({array_int:theme_list})',
		array(
			'theme_list' => array_keys($themes),
			'no_member' => 0,
			'name' => 'name',
		)
	);
	while ($row = $db->fetch_assoc($request))
		$themelist[$themes[$row['id_theme']]] = $row['value'];

	$db->free_result($request);
]]></search>
			<add><![CDATA[			AND variable = {string:name}
			AND id_theme IN ({array_int:theme_list})',
		array(
			'theme_list' => (array) $themes,
			'no_member' => 0,
			'name' => 'name',
		)
	);
	while ($row = $db->fetch_assoc($request))
		$themelist[$row['id_theme']] = $row['value'];

	$db->free_result($request);
]]></add>
		</operation>
	</file>
	<file name="SUBSDIR/Topic.subs.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ */
function splitAttemptMove($boards, $totopic)
{
	global $board, $user_info, $context;

	$db = database();
]]></search>
			<add><![CDATA[ */
function splitAttemptMove($boards, $totopic)
{
	global $board, $user_info;

	$db = database();
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		else
			$boards['destination'] = $boards['current'];
	}

	// Create a link to this in the old topic.
	// @todo Does this make sense if the topic was unapproved before? We are not yet sure if the resulting topic is unapproved.
	if (!empty($_POST['messageRedirect']))
		postSplitRedirect($context['reason'], $_POST['subname'], $boards['destination'], $context['new_topic']);
}

/**]]></search>
			<add><![CDATA[		else
			$boards['destination'] = $boards['current'];
	}
}

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[ *
 * @return array
 */
function splitDestinationBoard()
{
	global $board, $topic;
]]></search>
			<add><![CDATA[ *
 * @return array
 */
function splitDestinationBoard($toboard = 0)
{
	global $board, $topic;
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	if (empty($current_board))
		fatal_lang_error('no_board');

	if (!empty($_POST['move_new_topic']))
	{
		$toboard = !empty($_POST['board_list']) ? (int) $_POST['board_list'] : 0;
		if (!empty($toboard) && $board !== $toboard)
		{
			$destination_board = boardInfo($toboard);
			if (empty($destination_board))
				fatal_lang_error('no_board');
		}
	}

	if (!isset($destination_board))]]></search>
			<add><![CDATA[	if (empty($current_board))
		fatal_lang_error('no_board');

	if (!empty($toboard) && $board !== $toboard)
	{
		$destination_board = boardInfo($toboard);
		if (empty($destination_board))
			fatal_lang_error('no_board');
	}

	if (!isset($destination_board))]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Admin.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[								</div>
							</div>';

	// Point the admin to common support resources.
	echo '
							<div id="support_resources">]]></search>
			<add><![CDATA[								</div>
							</div>';

	// Display latest important updates
	if (!empty($context['latest_updates']))
		echo '
							<h3 id="latest_updates" class="category_header">
								', $txt['latest_updates'], '
							</h3>
							<div class="windowbg2">
								<div class="content">
									', $context['latest_updates'], '
								</div>
							</div>';

	// Point the admin to common support resources.
	echo '
							<div id="support_resources">]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[								</div>
							</div>';

	// Display latest support questions from ElkArte
	echo '
							<h3 class="category_header">
								<a class="hdicon cat_img_helptopics help" href="', $scripturl, '?action=quickhelp;help=latest_support" onclick="return reqOverlayDiv(this.href);"></a>', $txt['support_latest'], '
							</h3>
							<div class="windowbg">
								<div class="content">
									<div id="latestSupport">', $txt['support_latest_fetch'], '</div>
								</div>
							</div>';

	// The most important part - the credits :P.
	echo '
							<div id="credits_sections">]]></search>
			<add><![CDATA[								</div>
							</div>';

	// The most important part - the credits :P.
	echo '
							<div id="credits_sections">]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	foreach ($context['pinfo'] as $area => $php_area)
	{
		echo '
		<table id="', str_replace(' ', '_', $area), '" class="table_grid">
			<thead>
			<tr class="table_head three_column">
				<th scope="col"></th>]]></search>
			<add><![CDATA[	foreach ($context['pinfo'] as $area => $php_area)
	{
		echo '
		<table id="', str_replace(' ', '_', $area), '" class="table_grid wordbreak">
			<thead>
			<tr class="table_head three_column">
				<th scope="col"></th>]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/BoardIndex.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 * 
 */

/**]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[{
	global $context, $txt, $scripturl, $settings;

	echo '
			<li class="board_row">
				<h3 class="ic_section_header">]]></search>
			<add><![CDATA[{
	global $context, $txt, $scripturl, $settings;

	if (empty($context['calendar_holidays']) && empty($context['calendar_birthdays']) && empty($context['calendar_events']))
		return;

	echo '
			<li class="board_row">
				<h3 class="ic_section_header">]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Display.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
		// Show the message anchor and a "new" anchor if this message is new.
		echo '
				<div class="post_wrapper ', $message['approved'] ? ($message['alternate'] == 0 ? 'windowbg' : 'windowbg2') : 'approvebg', '">', $message['id'] != $context['first_message'] ? '
					<a class="post_anchor" id="msg' . $message['id'] . '"></a>' . ($message['first_new'] ? '<a id="new"></a>' : '') : '';

		// Showing the sidebar posting area?]]></search>
			<add><![CDATA[
		// Show the message anchor and a "new" anchor if this message is new.
		echo '
				<div class="post_wrapper ', $message['classes'], $message['approved'] ? ($message['alternate'] == 0 ? ' windowbg' : ' windowbg2') : ' approvebg', '">', $message['id'] != $context['first_message'] ? '
					<a class="post_anchor" id="msg' . $message['id'] . '"></a>' . ($message['first_new'] ? '<a id="new"></a>' : '') : '';

		// Showing the sidebar posting area?]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[									<li class="listlevel2"><a href="', $scripturl, '?action=post;board=', $context['current_board'], ';quote=', $message['id'], ';followup=', $message['id'], '" class="linklevel2 quotetonew_button">', $txt['quote_new'], '</a></li>';

			// What about splitting it off the rest of the topic?
			if ($context['can_split'] && !empty($context['real_num_replies']))
				echo '
									<li class="listlevel2"><a href="', $scripturl, '?action=splittopics;topic=', $context['current_topic'], '.0;at=', $message['id'], '" class="linklevel2 split_button">', $txt['split_topic'], '</a></li>';
]]></search>
			<add><![CDATA[									<li class="listlevel2"><a href="', $scripturl, '?action=post;board=', $context['current_board'], ';quote=', $message['id'], ';followup=', $message['id'], '" class="linklevel2 quotetonew_button">', $txt['quote_new'], '</a></li>';

			// What about splitting it off the rest of the topic?
			if ($context['can_split'] && !empty($context['real_num_replies']) && $context['topic_first_message'] !== $message['id'])
				echo '
									<li class="listlevel2"><a href="', $scripturl, '?action=splittopics;topic=', $context['current_topic'], '.0;at=', $message['id'], '" class="linklevel2 split_button">', $txt['split_topic'], '</a></li>';
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[							<div id="msg_', $message['id'], '_footer" class="attachments"', $ignoring ? ' style="display:none;"' : '', '>';

	$last_approved_state = 1;
	$i = 0;

	foreach ($message['attachment'] as $attachment)
	{]]></search>
			<add><![CDATA[							<div id="msg_', $message['id'], '_footer" class="attachments"', $ignoring ? ' style="display:none;"' : '', '>';

	$last_approved_state = 1;

	foreach ($message['attachment'] as $attachment)
	{]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/GenericList.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		<div class="generic_list">';
	else
		echo '
		<div id="', $list_id, '" class="generic_list_wrapper">';

	// Show the title of the table (if any), with an icon (if defined)
	if (!empty($cur_list['title']))]]></search>
			<add><![CDATA[		<div class="generic_list">';
	else
		echo '
		<div id="wrapper_', $list_id, '" class="generic_list_wrapper">';

	// Show the title of the table (if any), with an icon (if defined)
	if (!empty($cur_list['title']))]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Maintenance.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 */

/**]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 */

/**]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	else
		echo '
					<div class="', $context['suggested_method'] == 'use_external_tool' || $context['use_maintenance'] != 0 ? 'errorbox' : 'infobox', '">
					', $txt[$context['suggested_method']],
		$context['use_maintenance'] != 0 ? '<br />' . $txt['enable_maintenance' . $context['use_maintenance']] : '',
		'</div>';

	echo '
					<p>
						<label for="struct"><input type="checkbox" name="struct" id="struct" onclick="document.getElementById(\'submitDump\').disabled = !document.getElementById(\'struct\').checked &amp;&amp; !document.getElementById(\'data\').checked;" class="input_check" checked="checked" /> ', $txt['maintain_backup_struct'], '</label><br />
						<label for="data"><input type="checkbox" name="data" id="data" onclick="document.getElementById(\'submitDump\').disabled = !document.getElementById(\'struct\').checked &amp;&amp; !document.getElementById(\'data\').checked;" checked="checked" class="input_check" /> ', $txt['maintain_backup_data'], '</label><br />
						<label for="compress"><input type="checkbox" name="compress" id="compress" value="gzip"', $context['suggested_method'] == 'zipped_file' ? ' checked="checked"' : '', ' class="input_check" /> ', $txt['maintain_backup_gz'], '</label>
					</p>
					<div class="submitbutton">
						<input ', $context['use_maintenance'] == 2 ? 'disabled="disabled" ' : '', 'type="submit" value="', $txt['maintain_backup_save'], '" id="submitDump" onclick="return document.getElementById(\'struct\').checked || document.getElementById(\'data\').checked;" class="button_submit" />';
]]></search>
			<add><![CDATA[	else
		echo '
					<div class="', $context['suggested_method'] == 'use_external_tool' || $context['use_maintenance'] != 0 ? 'errorbox' : 'infobox', '">
						', $txt[$context['suggested_method']], $context['use_maintenance'] != 0 ? '
						<br />
						' . $txt['enable_maintenance' . $context['use_maintenance']] : '', '
					</div>
					<p>
						<label for="struct"><input type="checkbox" name="struct" id="struct" onclick="document.getElementById(\'submitDump\').disabled = !document.getElementById(\'struct\').checked &amp;&amp; !document.getElementById(\'data\').checked;" class="input_check" checked="checked" /> ', $txt['maintain_backup_struct'], '</label><br />
						<label for="data"><input type="checkbox" name="data" id="data" onclick="document.getElementById(\'submitDump\').disabled = !document.getElementById(\'struct\').checked &amp;&amp; !document.getElementById(\'data\').checked;" checked="checked" class="input_check" /> ', $txt['maintain_backup_data'], '</label><br />
						<label for="compress"><input type="checkbox" name="compress" id="compress" value="gzip"', $context['suggested_method'] == 'zipped_file' ? ' checked="checked"' : '', ' class="input_check" /> ', $txt['maintain_backup_gz'], '</label>
						</p>';

	if (empty($context['skip_security']))
	{
		echo '
					<div class="infobox">', $txt['security_database_download'], '</div>';
		template_control_chmod();
	}

	echo '
					<div class="submitbutton">
						<input ', $context['use_maintenance'] == 2 ? 'disabled="disabled" ' : '', 'type="submit" value="', $txt['maintain_backup_save'], '" id="submitDump" onclick="return document.getElementById(\'struct\').checked || document.getElementById(\'data\').checked;" class="button_submit" />';
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			</div>
		</div>
	</div>';
}]]></search>
			<add><![CDATA[			</div>
		</div>
	</div>';
}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/ManageAttachments.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */

/**
 * Template template wraps around the simple settings page to add javascript functionality.
 * (section above)
 */
function template_avatar_settings_below()
{
	echo '
	<script><!-- // --><![CDA]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[TA[
	var fUpdateStatus = function ()
	{
		document.getElementById("avatar_max_width_external").disabled = document.getElementById("avatar_download_external").checked;
		document.getElementById("avatar_max_height_external").disabled = document.getElementById("avatar_download_external").checked;
		document.getElementById("avatar_action_too_large").disabled = document.getElementById("avatar_download_external").checked;
		document.getElementById("custom_avatar_dir").disabled = document.getElementById("custom_avatar_enabled").value == 0;
		document.getElementById("custom_avatar_url").disabled = document.getElementById("custom_avatar_enabled").value == 0;
	}
	addLoadEvent(fUpdateStatus);
// ]]]></search>
			<add><![CDATA[
/**
 * Forum maintenance page.
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[]></script>
';
}

/**
 * Forum maintenance page.
 */
function template_maintenance()]]></search>
			<add><![CDATA[
function template_maintenance()]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/ManageSearch.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[							<span class="smalltext">', $txt['sphinx_searchd_port_desc'], '</span>
						</dt>
						<dd>
							<input type="text" name="sphinx_searchd_port" id="sphinx_searchd_port_input" value="', isset($modSettings['sphinx_searchd_port']) ? $modSettings['sphinx_searchd_port'] : '3312', '" size="4" />
						</dd>
						<dt>
							<label for="sphinxql_searchd_port_input"><strong>', $txt['sphinx_searchd_qlport'], '</strong></label><br />
							<span class="smalltext">', $txt['sphinx_searchd_qlport_desc'], '</span>
						</dt>
						<dd>
							<input type="text" name="sphinxql_searchd_port" id="sphinxql_searchd_port_input" value="', isset($modSettings['sphinxql_searchd_port']) ? $modSettings['sphinxql_searchd_port'] : '3313', '" size="4" />
						</dd>
						<dt>
							<label for="sphinx_max_results_input"><strong>', $txt['sphinx_max_matches'], '</strong></label><br />]]></search>
			<add><![CDATA[							<span class="smalltext">', $txt['sphinx_searchd_port_desc'], '</span>
						</dt>
						<dd>
							<input type="text" name="sphinx_searchd_port" id="sphinx_searchd_port_input" value="', isset($modSettings['sphinx_searchd_port']) ? $modSettings['sphinx_searchd_port'] : '9312', '" size="4" />
						</dd>
						<dt>
							<label for="sphinxql_searchd_port_input"><strong>', $txt['sphinx_searchd_qlport'], '</strong></label><br />
							<span class="smalltext">', $txt['sphinx_searchd_qlport_desc'], '</span>
						</dt>
						<dd>
							<input type="text" name="sphinxql_searchd_port" id="sphinxql_searchd_port_input" value="', isset($modSettings['sphinxql_searchd_port']) ? $modSettings['sphinxql_searchd_port'] : '9306', '" size="4" />
						</dd>
						<dt>
							<label for="sphinx_max_results_input"><strong>', $txt['sphinx_max_matches'], '</strong></label><br />]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/MergeTopics.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	foreach ($context['topics'] as $topic)
		echo '
						<li>
							<a href="', $scripturl, '?action=mergetopics;sa=options;board=', $context['current_board'], '.0;from=', $context['origin_topic'], ';to=', $topic['id'], ';', $context['session_var'], '=', $context['session_id'], '"><img src="', $settings['images_url'], '/buttons/merge.png" alt="', $txt['merge'], '"  /></a>&nbsp;
							<a href="', $scripturl, '?topic=', $topic['id'], '.0" target="_blank" class="new_win">', $topic['subject'], '</a> ', $txt['started_by'], ' ', $topic['poster']['link'], '
						</li>';
]]></search>
			<add><![CDATA[	foreach ($context['topics'] as $topic)
		echo '
						<li>
							<a class="linkbutton" href="', $scripturl, '?action=mergetopics;sa=options;board=', $context['current_board'], '.0;from=', $context['origin_topic'], ';to=', $topic['id'], ';', $context['session_var'], '=', $context['session_id'], '">
								<img class="centericon" src="', $settings['images_url'], '/buttons/merge.png" alt="', $txt['merge'], '"  />
							</a>&nbsp;
							<a href="', $scripturl, '?topic=', $topic['id'], '.0" target="_blank" class="new_win">', $topic['subject'], '</a> ', $txt['started_by'], ' ', $topic['poster']['link'], '
						</li>';
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Packages.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}

	echo '
				<div id="ftp_error_div" style="', (!empty($context['package_ftp']['error']) ? '' : 'display:none;'), '">
					<span id="ftp_error_message">', !empty($context['package_ftp']['error']) ? $context['package_ftp']['error'] : '', '</span>
				</div>';
]]></search>
			<add><![CDATA[	}

	echo '
				<div id="ftp_error_div" class="errorbox" style="', (!empty($context['package_ftp']['error']) ? '' : 'display:none;'), '">
					<span id="ftp_error_message">', !empty($context['package_ftp']['error']) ? $context['package_ftp']['error'] : '', '</span>
				</div>';
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/ProfileInfo.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[			// If the person looking at the summary has permission, and the account isn't activated, give the viewer the ability to do it themselves.
			if (!empty($context['activate_message']))
				echo '
					<dt class="clear"><span class="alert">', $context['activate_message'], '</span>&nbsp;(<a href="' . $scripturl . '?action=profile;save;area=activateaccount;u=' . $context['id_member'] . ';' . $context['session_var'] . '=' . $context['session_id'] . '"', ($context['activate_type'] == 4 ? ' onclick="return confirm(\'' . $txt['profileConfirm'] . '\');"' : ''), '>', $context['activate_link_text'], '</a>)</dt>';

			// If the current member is banned, show a message and possibly a link to the ban.
			if (!empty($context['member']['bans']))]]></search>
			<add><![CDATA[			// If the person looking at the summary has permission, and the account isn't activated, give the viewer the ability to do it themselves.
			if (!empty($context['activate_message']))
				echo '
					<dt class="clear"><span class="alert">', $context['activate_message'], '</span>&nbsp;(<a href="' . $context['activate_url'] . '"', ($context['activate_type'] == 4 ? ' onclick="return confirm(\'' . $txt['profileConfirm'] . '\');"' : ''), '>', $context['activate_link_text'], '</a>)</dt>';

			// If the current member is banned, show a message and possibly a link to the ban.
			if (!empty($context['member']['bans']))]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
	// Set the div height to about 4 lines of buddies w/avatars
	if (isset($context['buddies']))
		$div_height = 120 + (4 * max(empty($modSettings['avatar_max_height_external']) ? 0 : $modSettings['avatar_max_height_external'], empty($modSettings['avatar_max_height_upload']) ? 0 : $modSettings['avatar_max_height_upload'], 65));

	if (!empty($modSettings['enable_buddylist']) && $context['user']['is_owner'])
	{]]></search>
			<add><![CDATA[
	// Set the div height to about 4 lines of buddies w/avatars
	if (isset($context['buddies']))
		$div_height = 120 + (4 * max(empty($modSettings['avatar_max_height']) ? 0 : $modSettings['avatar_max_height'], empty($modSettings['avatar_max_height']) ? 0 : $modSettings['avatar_max_height'], 65));

	if (!empty($modSettings['enable_buddylist']) && $context['user']['is_owner'])
	{]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/ProfileOptions.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[									<div class="smalltext"><label for="userpicpersonal">', $txt['avatar_by_url'], '</label></div>
									<input type="text" id="userpicpersonal" name="userpicpersonal" value="', $context['member']['avatar']['external'], '" onchange="previewExternalAvatar(this.value);" class="input_text" />
									<br /><br />
									<img id="external" src="', !empty($context['member']['avatar']['allow_external']) && $context['member']['avatar']['choice'] == 'external' ? $context['member']['avatar']['external'] : $modSettings['avatar_url'] . '/blank.png', '" alt="" ', !empty($modSettings['avatar_max_height_external']) ? 'height="' . $modSettings['avatar_max_height_external'] . '" ' : '', !empty($modSettings['avatar_max_width_external']) ? 'width="' . $modSettings['avatar_max_width_external'] . '"' : '', '/>
								</div>';
	}
]]></search>
			<add><![CDATA[									<div class="smalltext"><label for="userpicpersonal">', $txt['avatar_by_url'], '</label></div>
									<input type="text" id="userpicpersonal" name="userpicpersonal" value="', $context['member']['avatar']['external'], '" onchange="previewExternalAvatar(this.value);" class="input_text" />
									<br /><br />
									<img id="external" src="', !empty($context['member']['avatar']['allow_external']) && $context['member']['avatar']['choice'] == 'external' ? $context['member']['avatar']['external'] : $modSettings['avatar_url'] . '/blank.png', '" alt="" ', !empty($modSettings['avatar_max_height']) ? 'height="' . $modSettings['avatar_max_height'] . '" ' : '', !empty($modSettings['avatar_max_width']) ? 'width="' . $modSettings['avatar_max_width'] . '"' : '', '/>
								</div>';
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[										selavatar = "' . $context['avatar_selected'] . '",
										avatardir = "' . $modSettings['avatar_url'] . '/",
										refuse_too_large = ', !empty($modSettings['avatar_action_too_large']) && $modSettings['avatar_action_too_large'] == 'option_refuse' ? 'true' : 'false', ',
										maxHeight = ', !empty($modSettings['avatar_max_height_external']) ? $modSettings['avatar_max_height_external'] : 0, ',
										maxWidth = ', !empty($modSettings['avatar_max_width_external']) ? $modSettings['avatar_max_width_external'] : 0, ';

									// Display the right avatar box based on what they are using
									init_avatars();]]></search>
			<add><![CDATA[										selavatar = "' . $context['avatar_selected'] . '",
										avatardir = "' . $modSettings['avatar_url'] . '/",
										refuse_too_large = ', !empty($modSettings['avatar_action_too_large']) && $modSettings['avatar_action_too_large'] == 'option_refuse' ? 'true' : 'false', ',
										maxHeight = ', !empty($modSettings['avatar_max_height']) ? $modSettings['avatar_max_height'] : 0, ',
										maxWidth = ', !empty($modSettings['avatar_max_width']) ? $modSettings['avatar_max_width'] : 0, ';

									// Display the right avatar box based on what they are using
									init_avatars();]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/Recent.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[										', $topic['views'], ' ', $txt['views'], '
									</p>
									<p class="topic_lastpost">
										<a class="topicicon img_last_post" href="', $topic['last_post']['href'], ' title="', $txt['last_post'], '"></a>
										', $topic['last_post']['html_time'], '<br />
										', $txt['by'], ' ', $topic['last_post']['member']['link'], '
									</p>]]></search>
			<add><![CDATA[										', $topic['views'], ' ', $txt['views'], '
									</p>
									<p class="topic_lastpost">
										<a class="topicicon img_last_post" href="', $topic['last_post']['href'], '" title="', $txt['last_post'], '"></a>
										', $topic['last_post']['html_time'], '<br />
										', $txt['by'], ' ', $topic['last_post']['member']['link'], '
									</p>]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/SplitTopics.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
							<label for="move_new_topic"><input type="checkbox" name="move_new_topic" id="move_new_topic" onclick="document.getElementById(\'board_list\').style.display = this.checked ? \'\' : \'none\';" class="input_check" /> ', $txt['splittopic_move'], '.</label>', template_select_boards('board_list'), ']]></search>
			<add><![CDATA[
							<label for="move_new_topic"><input type="checkbox" name="move_new_topic" id="move_new_topic" onclick="document.getElementById(\'board_list\').style.display = this.checked ? \'\' : \'none\';" class="input_check" /> ', $txt['splittopic_move'], '.</label>', template_select_boards('move_to_board'), ']]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						<li class="windowbg', $message['alternate'] ? '2' : '', '" id="not_selected_', $message['id'], '">
							<div class="content">
								<div class="message_header">
									<a class="split_icon floatright" href="', $scripturl, '?action=splittopics;sa=selectTopics;subname=', $context['topic']['subject'], ';topic=', $context['topic']['id'], '.', $context['not_selected']['start'], ';start2=', $context['selected']['start'], ';move=down;msg=', $message['id'], '" onclick="return topicSplitselect(\'down\', ', $message['id'], ');"><img src="', $settings['images_url'], '/split_select.png" alt="-&gt;" /></a>
									<strong>', $message['subject'], '</strong> ', $txt['by'], ' <strong>', $message['poster'], '</strong><br />
									<em>', $message['time'], '</em>
								</div>]]></search>
			<add><![CDATA[						<li class="windowbg', $message['alternate'] ? '2' : '', '" id="not_selected_', $message['id'], '">
							<div class="content">
								<div class="message_header">
									<a class="split_icon floatright" href="', $scripturl, '?action=splittopics;sa=selectTopics;subname=', $context['topic']['subject'], ';topic=', $context['topic']['id'], '.', $context['not_selected']['start'], ';start2=', $context['selected']['start'], ';move=down;msg=', $message['id'], '" onclick="return topicSplitselect(\'down\', ', $message['id'], ');"><i class="fa fa-2x fa-arrow-circle-o-right"></i></a>
									<strong>', $message['subject'], '</strong> ', $txt['by'], ' <strong>', $message['poster'], '</strong><br />
									<em>', $message['time'], '</em>
								</div>]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[						<li class="windowbg', $message['alternate'] ? '2' : '', '" id="selected_', $message['id'], '">
							<div class="content">
								<div class="message_header">
									<a class="split_icon floatleft" href="', $scripturl, '?action=splittopics;sa=selectTopics;subname=', $context['topic']['subject'], ';topic=', $context['topic']['id'], '.', $context['not_selected']['start'], ';start2=', $context['selected']['start'], ';move=up;msg=', $message['id'], '" onclick="return topicSplitselect(\'up\', ', $message['id'], ');"><img src="', $settings['images_url'], '/split_deselect.png" alt="&lt;-" /></a>
									<strong>', $message['subject'], '</strong> ', $txt['by'], ' <strong>', $message['poster'], '</strong><br />
									<em>', $message['time'], '</em>
								</div>]]></search>
			<add><![CDATA[						<li class="windowbg', $message['alternate'] ? '2' : '', '" id="selected_', $message['id'], '">
							<div class="content">
								<div class="message_header">
									<a class="split_icon floatleft" href="', $scripturl, '?action=splittopics;sa=selectTopics;subname=', $context['topic']['subject'], ';topic=', $context['topic']['id'], '.', $context['not_selected']['start'], ';start2=', $context['selected']['start'], ';move=up;msg=', $message['id'], '" onclick="return topicSplitselect(\'up\', ', $message['id'], ');"><i class="fa fa-2x fa-arrow-circle-o-left"></i></a>
									<strong>', $message['subject'], '</strong> ', $txt['by'], ' <strong>', $message['poster'], '</strong><br />
									<em>', $message['time'], '</em>
								</div>]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[				</div>
				<div class="submitbutton clear_right">
					<input type="hidden" name="topic" value="', $context['current_topic'], '" />
					<input type="hidden" name="subname" value="', $context['new_subject'], '" />
					<input type="hidden" name="move_to_board" value="', $context['move_to_board'], '" />
					<input type="hidden" name="reason" value="', $context['reason'], '" />
					<input type="submit" value="', $txt['split_topic'], '" class="button_submit" />
					<input type="hidden" name="', $context['session_var'], '" value="', $context['session_id'], '" />
				</div>]]></search>
			<add><![CDATA[				</div>
				<div class="submitbutton clear_right">
					<input type="hidden" name="topic" value="', $context['current_topic'], '" />
					<input type="submit" value="', $txt['split_topic'], '" class="button_submit" />
					<input type="hidden" name="', $context['session_var'], '" value="', $context['session_id'], '" />
				</div>]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/_besocial/index_besocial.css">
		<operation>
			<search position="replace"><![CDATA[	color: #555;
	text-decoration: none;
}
.poster .listlevel1 a.linklevel1 {
	font-size: 1.1em;
}]]></search>
			<add><![CDATA[	color: #555;
	text-decoration: none;
}
.listlevel1.subsections {
	top: -1px;
}
.poster .listlevel1 a.linklevel1 {
	font-size: 1.1em;
}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[.pagelinks .navPages:hover, .pagelinks .current_page {
	background: #7bb128;
	color: white;
	border-radius: 8px;
	text-decoration: none;
}

/* our buddies &laquo; &raquo; */
.small_pagelinks:before {
]]></search>
			<add><![CDATA[.pagelinks .navPages:hover, .pagelinks .current_page {
	background: #7bb128;
	color: white;
	text-decoration: none;
}
.pagelinks .navPages, .pagelinks .current_page {
	border-radius: 8px;
}

/* our buddies &laquo; &raquo; */
.small_pagelinks:before {
]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/admin.css">
		<operation>
			<search position="replace"><![CDATA[	margin: 12px 0 0 0;
	padding: 0;
}
#latestSupport{
	padding: 0 25px 15px 25px;
}
#credits_sections {
	margin: 0 0 -24px 0;
}]]></search>
			<add><![CDATA[	margin: 12px 0 0 0;
	padding: 0;
}
#credits_sections {
	margin: 0 0 -24px 0;
}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/css/index.css">
		<operation>
			<search position="replace"><![CDATA[	/* 17 - 1.214, 18 - 1.286, 19 - 1.357, 20 - 1.429, 21 - 1.5, 22 - 1.571, 23 - 1.643
	/* 24 - 1.714, 25 - 1.786, 26 - 1.857, 27 - 1.929, 28 - 2, 29 - 2.071 */
	font: 87.5%/150% "Segoe UI", "Helvetica Neue", "Liberation Sans", "Nimbus Sans L", "Trebuchet MS", Arial, sans-serif;
	text-rendering: optimizeLegibility;
}

/* Tables should show empty cells. */]]></search>
			<add><![CDATA[	/* 17 - 1.214, 18 - 1.286, 19 - 1.357, 20 - 1.429, 21 - 1.5, 22 - 1.571, 23 - 1.643
	/* 24 - 1.714, 25 - 1.786, 26 - 1.857, 27 - 1.929, 28 - 2, 29 - 2.071 */
	font: 87.5%/150% "Segoe UI", "Helvetica Neue", "Liberation Sans", "Nimbus Sans L", "Trebuchet MS", Arial, sans-serif;
}

/* Tables should show empty cells. */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	vertical-align: middle;
}
select {
	padding: 0 6px 0 2px;
}
.input_text {
	font-size: .876em;]]></search>
			<add><![CDATA[	vertical-align: middle;
}
select {
	padding: 0 0 0 2px;
}
.input_text {
	font-size: .876em;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	font-family: "DejaVu Sans Mono", Monaco, Consolas, monospace;
	resize: vertical;
}
/* Stop em compounding when elements are nested. */
/* @todo - Scrap old extra divs in Subs.php. */
.bbc_standard_quote .bbc_alternate_quote, .bbc_alternate_quote .bbc_standard_quote,]]></search>
			<add><![CDATA[	font-family: "DejaVu Sans Mono", Monaco, Consolas, monospace;
	resize: vertical;
}
.bbc_code .tab {
	width: 4ex;
	white-space:pre;
	display: inline-block;
}
/* Stop em compounding when elements are nested. */
/* @todo - Scrap old extra divs in Subs.php. */
.bbc_standard_quote .bbc_alternate_quote, .bbc_alternate_quote .bbc_standard_quote,]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	text-overflow: ellipsis;
	max-width: 100%;
	vertical-align: bottom;
}

/*	$AJAX		*/]]></search>
			<add><![CDATA[	text-overflow: ellipsis;
	max-width: 100%;
	vertical-align: bottom;
	word-wrap: normal;
}

/*	$AJAX		*/]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}
.topic_name h4 {
	line-height: 1.429em;
	display: inline-block;
	padding-right: 30px;
	word-break: break-all;
    word-wrap: break-word;
}
.topic_name h4 a {
	font-weight: bold;]]></search>
			<add><![CDATA[}
.topic_name h4 {
	line-height: 1.429em;
	padding-right: 30px;
	word-break: break-all;
	word-wrap: break-word;
}
.topic_name h4 a {
	font-weight: bold;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}
.drop_area_fileselect {
	cursor: pointer;
	margin-left: -190px;
	opacity: 0.0001;
	position: absolute;
	width: 220px;
	padding-left: 220px;
}

#postAttachment >dd.progress_tracker {]]></search>
			<add><![CDATA[}
.drop_area_fileselect {
	cursor: pointer;
	margin-left: -160px;
	opacity: 0.0001;
	position: absolute;
	width: 160px;
}
#chrome .drop_area_fileselect, #safari .drop_area_fileselect {
	padding-left: 160px;
}
.drop_area_fileselect_text {
	white-space: nowrap;
}

#postAttachment >dd.progress_tracker {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[.search_results_posts {
	overflow: hidden;
	padding: 0.2em 1em;
}
.search_results_posts .buttons {
	padding: 5px 12px 0 0;]]></search>
			<add><![CDATA[.search_results_posts {
	overflow: hidden;
	padding: 0.2em 1em;
	table-layout: fixed;
}
.search_results_posts .buttons {
	padding: 5px 12px 0 0;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	margin: 0.2em 1em 0;
	border-bottom: 0;
}
.search_results_posts .quickbuttons {
	margin-left: 1em;
	margin-right: 1em;
}
.search_results_posts .topic_body {
	margin: 0 1em 0;
	padding-bottom: 12px;
	padding-top: 12px;
}
.search_results_posts .quick_mod {
	position: absolute;]]></search>
			<add><![CDATA[	margin: 0.2em 1em 0;
	border-bottom: 0;
}
.search_results_posts .topic_moderation {
	vertical-align: top;
	width: 2em;
	padding: 1.3em 1em 0 0;
}
.search_results_posts .quickbuttons {
	margin-left: 1em;
}
.search_results_posts .topic_body {
	margin: 0 1em 0;
	padding-bottom: 12px;
	padding-top: 12px;
	width: 99%
}
.search_results_posts .quick_mod {
	position: absolute;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[.search_results_posts .counter {
	padding: 6px 0 6px 1.5em;
}
.compact_view .content {
	overflow: auto;
}]]></search>
			<add><![CDATA[.search_results_posts .counter {
	padding: 6px 0 6px 1.5em;
}
.search_results_posts .topic_details, .search_results_posts .topic_body {
	padding: 10px 0 10px 10px
}
.compact_view .content {
	overflow: auto;
}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}
/* This one does 800 screens at default font size. */
@media screen and (max-width: 50em) {
	#logobox img {
		max-width: 95%;
	}]]></search>
			<add><![CDATA[}
/* This one does 800 screens at default font size. */
@media screen and (max-width: 50em) {
	dd input, dd select, dd textarea {
		width: 100% !important;
		max-width: 100% !important;
	}
	#post_header dd select {
		max-width: 30% !important;
	}
	dd .input_check, dd .input_radio {
		display: inline !important;
		width: 1.5em !important;
	}
	#logobox img {
		max-width: 95%;
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	.postarea {
		margin: 0 0 0 6em;
	}
	.avatar {
		max-width: 7em;
	}
	.poster_avatar a {
		padding: 0;
	}
]]></search>
			<add><![CDATA[	.postarea {
		margin: 0 0 0 6em;
	}
	.poster .name {
		padding: 0;
	}
	.avatar, .avatar.avatarresize {
		max-width: 80px;
	}
	.poster_avatar a {
		padding: 0;
	}
	.poster .membergroup {
		word-break: normal;
		word-wrap: break-word;
	}
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	#ic_recentposts, #ps_recentposts, #ps_recenttopics {
		font-size: 1em;
	}
}
/* This one does 540 and smaller screens at default font size. */
@media screen and (max-width: 33.750em) {]]></search>
			<add><![CDATA[	#ic_recentposts, #ps_recentposts, #ps_recenttopics {
		font-size: 1em;
	}
	#ps_recentposts .recentposter {
		display: table-cell;
	}
}
/* This one does 540 and smaller screens at default font size. */
@media screen and (max-width: 33.750em) {]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		width: 90% !important;
		max-width: 90% !important;
	}
	dd .input_check, dd .input_radio {
		display: inline !important;
		width: auto !important;
	}
	#search_options {
		width: 100%;]]></search>
			<add><![CDATA[		width: 90% !important;
		max-width: 90% !important;
	}
	#postAttachment2 dt {
		width: 100% !important;
	}
	#search_options {
		width: 100%;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	#news, #logobox, .rightheader #logobox, #top_section_notice {
		display: none;
	}
	.avatar {
		max-width: 40px;
		max-height: 40px;
	}]]></search>
			<add><![CDATA[	#news, #logobox, .rightheader #logobox, #top_section_notice {
		display: none;
	}
	.avatar, .avatar.avatarresize {
		max-width: 40px;
		max-height: 40px;
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	}
	.poster .name {
		white-space: nowrap;
	}
	.poster .listlevel1 {
		float: left;]]></search>
			<add><![CDATA[	}
	.poster .name {
		white-space: nowrap;
		text-overflow: clip;
	}
	.poster .listlevel1 {
		float: left;]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}
/* This one does 480px screens at default font size. */
@media screen and (max-width: 30em) {
	#button_admin {
		display: none;
	}]]></search>
			<add><![CDATA[}
/* This one does 480px screens at default font size. */
@media screen and (max-width: 30em) {
	.content {
	    padding: 0.1em 0.1em;
	}
	.listlevel2, .listlevel3 {
		max-width: 12em !important;
	}
	.menulevel2 {
		max-width: 12em;
	}
	#button_admin {
		display: none;
	}]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	.shortcuts {
		display: none;
	}
}]]></search>
			<add><![CDATA[	.shortcuts {
		display: none;
	}
	dt, dd, dd label, .login dt, #advanced_search dt {
		width: 100% !important;
	}
	dd {
		padding-left: 4% !important;
	}
	dd input, dd select, dd textarea {
		max-width: 95% !important;
	}
	ul.post_options li {
		width: 50%;
	}
	#postAttachment dd, #postAttachment2 dd {
		margin: 2px 1px;
	}
	#postMoreOptions, #postAttachment, #postAttachment2 {
		padding: 4px;
	}
}]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/index.template.php">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 */
]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:  	BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 */
]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	{
		if (!isset($value['test']) || !empty($context[$value['test']]))
			$buttons[] = '
								<li role="menuitem"><a' . (isset($value['id']) ? ' id="button_strip_' . $value['id'] . '"' : '') . ' class="linklevel1 button_strip_' . $key . (isset($value['active']) ? ' active' : '') . '" href="' . $value['url'] . '"' . (isset($value['custom']) ? ' ' . $value['custom'] : '') . '>' . $txt[$value['text']] . '</a></li>';
	}

	// No buttons? No button strip either.]]></search>
			<add><![CDATA[	{
		if (!isset($value['test']) || !empty($context[$value['test']]))
			$buttons[] = '
								<li role="menuitem"><a' . (isset($value['id']) ? ' id="button_strip_' . $value['id'] . '"' : '') . ' class="linklevel1 button_strip_' . $key . (!empty($value['active']) ? ' active' : '') . '" href="' . $value['url'] . '"' . (isset($value['custom']) ? ' ' . $value['custom'] : '') . '>' . $txt[$value['text']] . '</a></li>';
	}

	// No buttons? No button strip either.]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Admin.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['support_resources_p1'] = 'Our <a href="%1$s" target="_blank" class="new_win">Documentation Wiki</a> provides the main documentation for ElkArte. The ElkArte Online Manual has many documents to help answer support questions and explain <a href="%2$s" target="_blank" class="new_win">Features</a>, <a href="%3$s" target="_blank" class="new_win">Settings</a>, <a href="%4$s" target="_blank" class="new_win">Themes</a>, <a href="%5$s" target="_blank" class="new_win">Packages</a>, etc. The Online Manual documents each area of ElkArte thoroughly and should answer most questions quickly.';
$txt['support_resources_p2'] = 'If you can\'t find the answers to your questions in the Documentation Wiki, you may want to search our <a href="%1$s" target="_blank" class="new_win">Support Community</a> or ask for assistance in our support boards. The ElkArte Support Community can be used for <a href="%2$s" target="_blank" class="new_win">support</a>, <a href="%3$s" target="_blank" class="new_win">customization</a>, and many other things such as discussing ElkArte, finding a host, and discussing administrative issues with other forum administrators.';

$txt['support_latest'] = 'Common support &amp; issues';
$txt['support_latest_fetch'] = 'Retrieving support information...';

$txt['edit_permissions_info'] = 'Use permission settings to manage global and specific board features and what actions that guest, members and moderators can do.';
$txt['membergroups_members'] = 'Regular Members';]]></search>
			<add><![CDATA[$txt['support_resources_p1'] = 'Our <a href="%1$s" target="_blank" class="new_win">Documentation Wiki</a> provides the main documentation for ElkArte. The ElkArte Online Manual has many documents to help answer support questions and explain <a href="%2$s" target="_blank" class="new_win">Features</a>, <a href="%3$s" target="_blank" class="new_win">Settings</a>, <a href="%4$s" target="_blank" class="new_win">Themes</a>, <a href="%5$s" target="_blank" class="new_win">Packages</a>, etc. The Online Manual documents each area of ElkArte thoroughly and should answer most questions quickly.';
$txt['support_resources_p2'] = 'If you can\'t find the answers to your questions in the Documentation Wiki, you may want to search our <a href="%1$s" target="_blank" class="new_win">Support Community</a> or ask for assistance in our support boards. The ElkArte Support Community can be used for <a href="%2$s" target="_blank" class="new_win">support</a>, <a href="%3$s" target="_blank" class="new_win">customization</a>, and many other things such as discussing ElkArte, finding a host, and discussing administrative issues with other forum administrators.';

$txt['latest_updates'] = 'Latest noteworthy updates';
$txt['new_in_1_0_2'] = 'The most significant change in ElkArte 1.0.2 is avatar permission management. Currently each method of setting an avatar is permission-based, requiring the enabling/disabling of each method for each group. With 1.0.2 avatars are simply enabled/disabled by user group, this allows the enabled groups to add an avatar (by all available methods).<br />
The only permission available is a general one to allow members to change or not their avatars. Additionally there is only one setting for maximum width and height of avatars, these values apply to all avatar methods.<br /><br />
Due to the nature of the changes it was not impossible to migrate existing settings to the new format, for that reason you are encouraged to visit the <a href="{admin_url};area=manageattachments;sa=avatars">Avatar Settings</a> page and set the options you prefer.';

$txt['edit_permissions_info'] = 'Use permission settings to manage global and specific board features and what actions that guest, members and moderators can do.';
$txt['membergroups_members'] = 'Regular Members';]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$txt['avatar_default'] = 'Enable a default avatar for all users without their own avatar';
$txt['avatar_directory'] = 'Avatars directory';
$txt['avatar_url'] = 'Avatars URL';
$txt['avatar_max_width_external'] = 'Maximum width of external avatar';
$txt['avatar_max_height_external'] = 'Maximum height of external avatar';
$txt['avatar_action_too_large'] = 'If the avatar is too large...';
$txt['option_refuse'] = 'Refuse it';
$txt['option_html_resize'] = 'Let the HTML resize it';
$txt['option_js_resize'] = 'Resize it with JavaScript';
$txt['option_download_and_resize'] = 'Download and resize it (requires GD module)';
$txt['gravatar'] = 'Gravatars';
$txt['gravatar_groups'] = 'Member groups allowed to select a Gravatar';
$txt['gravatar_rating'] = 'Gravatar Rating';
$txt['avatar_max_width_upload'] = 'Maximum width of uploaded avatar';
$txt['avatar_max_height_upload'] = 'Maximum height of uploaded avatar';
$txt['avatar_resize_upload'] = 'Resize oversized large avatars';
$txt['avatar_resize_upload_note'] = '(requires GD module)';
$txt['avatar_download_png'] = 'Use PNG for resized avatars';
$txt['avatar_img_enc_warning'] = 'Neither the GD module nor ImageMagick are currently installed. Some avatar features are disabled.';
$txt['avatar_external'] = 'External avatars';
$txt['avatar_upload'] = 'Uploadable avatars';
$txt['avatar_server_stored'] = 'Server-stored avatars';
$txt['avatar_server_stored_groups'] = 'Member groups allowed to select a server stored avatar';
$txt['avatar_upload_groups'] = 'Member groups allowed to upload an avatar to the server';
$txt['avatar_external_url_groups'] = 'Member groups allowed to select an avatar from an external URL';
$txt['avatar_select_permission'] = 'Select permissions for each group';
$txt['avatar_download_external'] = 'Download avatar at given URL';
$txt['custom_avatar_enabled'] = 'Upload avatars to...';]]></search>
			<add><![CDATA[$txt['avatar_default'] = 'Enable a default avatar for all users without their own avatar';
$txt['avatar_directory'] = 'Avatars directory';
$txt['avatar_url'] = 'Avatars URL';
$txt['avatar_max_width'] = 'Maximum width of avatars in pixels (px)';
$txt['avatar_max_height'] = 'Maximum height of avatars in pixels (px)';
$txt['avatar_action_too_large'] = 'If the avatar is too large...';
$txt['option_refuse'] = 'Refuse it';
$txt['option_resize'] = 'Let the CSS resize it';
$txt['option_download_and_resize'] = 'Download and resize it (requires GD module or ImageMagick)';
$txt['gravatar'] = 'Gravatars';
$txt['avatar_gravatar_enabled'] = 'Enable use of gravatars';
$txt['gravatar_rating'] = 'Gravatar Rating';
$txt['avatar_download_png'] = 'Use PNG for resized avatars';
$txt['avatar_img_enc_warning'] = 'Neither the GD module nor ImageMagick are currently installed. Some avatar features are disabled.';
$txt['avatar_external'] = 'External avatars';
$txt['avatar_external_enabled'] = 'Enable use of external (remote/URL) avatars';
$txt['avatar_upload'] = 'Uploadable avatars';
$txt['avatar_resize_options'] = 'Server storage options';
$txt['avatar_upload_enabled'] = 'Enable the upload of avatars';
$txt['avatar_server_stored'] = 'Server-stored avatars';
$txt['avatar_stored_enabled'] = 'Enable the selection of server stored avatars';
$txt['profile_set_avatar'] = 'Member groups allowed to select an avatar';
$txt['avatar_select_permission'] = 'Select permissions for each group';
$txt['avatar_download_external'] = 'Download avatar at given URL';
$txt['custom_avatar_enabled'] = 'Upload avatars to...';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Editor.english.php">
		<operation>
			<search position="replace"><![CDATA[$editortxt['Teletype'] = 'Teletype';
$editortxt['Move'] = 'Move';
$editortxt['Insert Spoiler'] = 'Insert Spoiler';
$editortxt['Insert Footnote'] = 'Insert Footnote';]]></search>
			<add><![CDATA[$editortxt['Teletype'] = 'Teletype';
$editortxt['Move'] = 'Move';
$editortxt['Insert Spoiler'] = 'Insert Spoiler';
$editortxt['Insert Footnote'] = 'Insert Footnote';
$editortxt['Split Tag'] = 'Split quote at cursor (ctrl+enter)';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/EmailTemplates.english.php">
		<operation>
			<search position="replace"><![CDATA[{REGARDS}';

/**
	@additional_params: paid_subscription_refund
		NAME: Subscription title.
		REALNAME: Recipients name]]></search>
			<add><![CDATA[{REGARDS}';

/**
	@additional_params: admin_backup_database
		BAK_REALNAME: the name of the user doing the backup
	@description:
*/
$txt['admin_backup_database_subject'] = 'A database backup has been taken';
$txt['admin_backup_database_body'] = '{REALNAME},

this email is to to inform you that {BAK_REALNAME} has just downloaded a backup of the database at {FORUMNAME}.

{REGARDS}';

/**
	@additional_params: editing_theme
		EDIT_REALNAME: the name of the user doing the backup
		FILE_EDITED: the name of the file being modified
		THEME_NAME: the name of the theme
	@description:
*/
$txt['editing_theme_subject'] = 'Editing of a theme';
$txt['editing_theme_body'] = '{REALNAME},

this email is just to to inform you that {EDIT_REALNAME} is going to edit the template file:
{FILE_EDITED}
of the theme {THEME_NAME} at {FORUMNAME}.

If you know this is not the case, please investigate the event.

{REGARDS}';

/**
	@additional_params: paid_subscription_refund
		NAME: Subscription title.
		REALNAME: Recipients name]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Errors.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['cannot_profile_extra_own'] = 'Sorry, but you don\'t have the necessary permissions to edit your profile data.';
$txt['cannot_profile_identity_own'] = 'You can\'t change your identity at the current moment.';
$txt['cannot_profile_title_own'] = 'You are not allowed to change your custom title.';
$txt['cannot_profile_server_avatar'] = 'You are not permitted to use a server stored avatar.';
$txt['cannot_profile_upload_avatar'] = 'You do not have permission to upload an avatar.';
$txt['cannot_profile_remote_avatar'] = 'You don\'t have the privilege of using a remote avatar.';
$txt['cannot_profile_view_own'] = 'Many apologies, but you can\'t view your own profile.';
$txt['cannot_profile_view_any'] = 'Many apologies, but you can\'t view just any profile.';
$txt['cannot_delete_own'] = 'Ouch, sorry, you cannot delete your posts on this board.';]]></search>
			<add><![CDATA[$txt['cannot_profile_extra_own'] = 'Sorry, but you don\'t have the necessary permissions to edit your profile data.';
$txt['cannot_profile_identity_own'] = 'You can\'t change your identity at the current moment.';
$txt['cannot_profile_title_own'] = 'You are not allowed to change your custom title.';
$txt['cannot_profile_set_avatar'] = 'You are not permitted to change your avatar.';
$txt['cannot_profile_view_own'] = 'Many apologies, but you can\'t view your own profile.';
$txt['cannot_profile_view_any'] = 'Many apologies, but you can\'t view just any profile.';
$txt['cannot_delete_own'] = 'Ouch, sorry, you cannot delete your posts on this board.';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Help.english.php">
		<operation>
			<search position="replace"><![CDATA[$helptxt['avatar_external'] = 'With this enabled, your members can type in a URL to their own avatar.  The downside of this is that, in some cases, they may use avatars that are overly large or portray images you don\'t want on your forum.';
$helptxt['avatar_download_external'] = 'With this option enabled, the URL given by the user is accessed to download the avatar at that location. On success, the avatar will be treated as uploadable avatar.';
$helptxt['avatar_upload'] = 'This option is much like &quot;Allow members to select an external avatar&quot;, except that you have better control over the avatars, a better time resizing them, and your members do not have to have somewhere to put avatars.<br /><br />However, the downside is that it can take a lot of space on your server.';
$helptxt['avatar_download_png'] = 'PNGs are larger, but offer better quality compression.  If this is unchecked, JPEG will be used instead - which is often smaller, but also of lesser or blurry quality.';
$helptxt['gravatar'] = 'Gravatar (globally recognized avatar) is a service for providing globally unique avatars. For more details please visit the Gravatar <a href="http://www.gravatar.com" target="_blank"><strong>website</strong>.</a>';
$helptxt['gravatar_rating'] = 'Gravatar allows users to self-rate their images so that they can indicate if an image is appropriate for a certain audience. By default, only \'G\' rated images are displayed unless you indicate that you would like to see higher ratings. <br /><br /><ul><li><strong>g:</strong> suitable for display on all websites with any audience type.</li><li><strong>pg:</strong> may contain rude gestures, provocatively dressed individuals, the lesser swear words, or mild violence.</li><li><strong>r:</strong> may contain such things as harsh profanity, intense violence, nudity, or hard drug use.</li><li><strong>x:</strong> may contain hardcore sexual imagery or extremely disturbing violence.</li></ul>';]]></search>
			<add><![CDATA[$helptxt['avatar_external'] = 'With this enabled, your members can type in a URL to their own avatar.  The downside of this is that, in some cases, they may use avatars that are overly large or portray images you don\'t want on your forum.';
$helptxt['avatar_download_external'] = 'With this option enabled, the URL given by the user is accessed to download the avatar at that location. On success, the avatar will be treated as uploadable avatar.';
$helptxt['avatar_upload'] = 'This option is much like &quot;Allow members to select an external avatar&quot;, except that you have better control over the avatars, a better time resizing them, and your members do not have to have somewhere to put avatars.<br /><br />However, the downside is that it can take a lot of space on your server.';
$helptxt['avatar_resize_options'] = 'This set of options apply to any avatar loaded to the server by users, either uploaded or retrieved from an external URL.';
$helptxt['avatar_download_png'] = 'PNGs are larger, but offer better quality compression.  If this is unchecked, JPEG will be used instead - which is often smaller, but also of lesser or blurry quality.';
$helptxt['gravatar'] = 'Gravatar (globally recognized avatar) is a service for providing globally unique avatars. For more details please visit the Gravatar <a href="http://www.gravatar.com" target="_blank"><strong>website</strong>.</a>';
$helptxt['gravatar_rating'] = 'Gravatar allows users to self-rate their images so that they can indicate if an image is appropriate for a certain audience. By default, only \'G\' rated images are displayed unless you indicate that you would like to see higher ratings. <br /><br /><ul><li><strong>g:</strong> suitable for display on all websites with any audience type.</li><li><strong>pg:</strong> may contain rude gestures, provocatively dressed individuals, the lesser swear words, or mild violence.</li><li><strong>r:</strong> may contain such things as harsh profanity, intense violence, nudity, or hard drug use.</li><li><strong>x:</strong> may contain hardcore sexual imagery or extremely disturbing violence.</li></ul>';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Maintenance.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['plain_text'] = 'The best method to backup your database is to create a plain text file, a compressed package may not be completely reliable.';
$txt['enable_maintenance1'] = 'Due to the size of your forum, it is recommended to place your forum in "maintenance mode" before you start the backup.';
$txt['enable_maintenance2'] = 'To proceed, due to the size of your forum, please place your forum in "maintenance mode".';]]></search>
			<add><![CDATA[$txt['plain_text'] = 'The best method to backup your database is to create a plain text file, a compressed package may not be completely reliable.';
$txt['enable_maintenance1'] = 'Due to the size of your forum, it is recommended to place your forum in "maintenance mode" before you start the backup.';
$txt['enable_maintenance2'] = 'To proceed, due to the size of your forum, please place your forum in "maintenance mode".';
$txt['security_database_download'] = 'For security reasons, in order to proceed with the download of the backup you have to provide the FTP data:';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/ManagePermissions.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['permissionhelp_profile_remove'] = 'This permission allows a user to delete his account, when set to \'Own Account\'.';
$txt['permissionname_profile_remove_own'] = 'Own account';
$txt['permissionname_profile_remove_any'] = 'Any account';
$txt['permissionname_profile_server_avatar'] = 'Select an avatar from the server';
$txt['permissionhelp_profile_server_avatar'] = 'If enabled this will allow a user to select an avatar from the avatar collections installed on the server.';
$txt['permissionname_profile_upload_avatar'] = 'Upload an avatar to the server';
$txt['permissionhelp_profile_upload_avatar'] = 'This permission will allow a user to upload their personal avatar to the server.';
$txt['permissionname_profile_remote_avatar'] = 'Choose a remotely stored avatar';
$txt['permissionhelp_profile_remote_avatar'] = 'Because avatars might influence the page creation time negatively, it is possible to disallow certain member groups to use avatars from external servers.';

$txt['permissiongroup_general_board'] = 'General';
$txt['permissionname_moderate_board'] = 'Moderate board';]]></search>
			<add><![CDATA[$txt['permissionhelp_profile_remove'] = 'This permission allows a user to delete his account, when set to \'Own Account\'.';
$txt['permissionname_profile_remove_own'] = 'Own account';
$txt['permissionname_profile_remove_any'] = 'Any account';
$txt['permissionname_profile_set_avatar'] = 'Select an avatar';
$txt['permissionhelp_profile_set_avatar'] = 'If enabled this will allow a user to select an avatar.';

$txt['permissiongroup_general_board'] = 'General';
$txt['permissionname_moderate_board'] = 'Moderate board';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Modlog.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['modlog_ac_upgrade_package'] = 'Upgraded package: &quot;{package}&quot; to version {version}';
$txt['modlog_ac_uninstall_package'] = 'Uninstalled package: &quot;{package}&quot;, version {version}';

// Restore topic.
$txt['modlog_ac_restore_topic'] = 'Restored topic &quot;{topic}&quot; from &quot;{board}&quot; to &quot;{board_to}&quot;';
$txt['modlog_ac_restore_posts'] = 'Restored posts from &quot;{subject}&quot; to the topic &quot;{topic}&quot; in the &quot;{board}&quot; board.';]]></search>
			<add><![CDATA[$txt['modlog_ac_upgrade_package'] = 'Upgraded package: &quot;{package}&quot; to version {version}';
$txt['modlog_ac_uninstall_package'] = 'Uninstalled package: &quot;{package}&quot;, version {version}';

$txt['modlog_ac_database_backup'] = 'Database backup taken by {member}.';
$txt['modlog_ac_editing_theme'] = '{member} edited a theme.';

// Restore topic.
$txt['modlog_ac_restore_topic'] = 'Restored topic &quot;{topic}&quot; from &quot;{board}&quot; to &quot;{board_to}&quot;';
$txt['modlog_ac_restore_posts'] = 'Restored posts from &quot;{subject}&quot; to the topic &quot;{topic}&quot; in the &quot;{board}&quot; board.';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Packages.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['package_ftp_test_connection'] = 'Test Connection';
$txt['package_ftp_test_success'] = 'FTP connection established.';
$txt['package_ftp_test_failed'] = 'Could not contact server.';

// For a break, use \\n instead of <br />... and don't use entities.
$txt['package_delete_bad'] = 'The package you are about to delete is currently installed!  If you delete it, you may not be able to uninstall it later.\\n\\nAre you sure?';]]></search>
			<add><![CDATA[$txt['package_ftp_test_connection'] = 'Test Connection';
$txt['package_ftp_test_success'] = 'FTP connection established.';
$txt['package_ftp_test_failed'] = 'Could not contact server.';
$txt['package_ftp_bad_server'] = 'Could not contact server.';

// For a break, use \\n instead of <br />... and don't use entities.
$txt['package_delete_bad'] = 'The package you are about to delete is currently installed!  If you delete it, you may not be able to uninstall it later.\\n\\nAre you sure?';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/Reports.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['group_perms_name_profile_extra_own'] = 'Edit own additional options';
$txt['group_perms_name_profile_identity_any'] = 'Edit any account settings';
$txt['group_perms_name_profile_identity_own'] = 'Edit own account settings';
$txt['group_perms_name_profile_server_avatar'] = 'Select a server avatar';
$txt['group_perms_name_profile_upload_avatar'] = 'Upload an avatar';
$txt['group_perms_name_profile_remote_avatar'] = 'Choose a remote avatar';
$txt['group_perms_name_profile_remove_any'] = 'Delete any account';
$txt['group_perms_name_profile_remove_own'] = 'Delete own account';
$txt['group_perms_name_profile_title_any'] = 'Edit any custom title';]]></search>
			<add><![CDATA[$txt['group_perms_name_profile_extra_own'] = 'Edit own additional options';
$txt['group_perms_name_profile_identity_any'] = 'Edit any account settings';
$txt['group_perms_name_profile_identity_own'] = 'Edit own account settings';
$txt['group_perms_name_profile_set_avatar'] = 'Select an avatar';
$txt['group_perms_name_profile_remove_any'] = 'Delete any account';
$txt['group_perms_name_profile_remove_own'] = 'Delete own account';
$txt['group_perms_name_profile_title_any'] = 'Edit any custom title';]]></add>
		</operation>
	</file>
	<file name="LANGUAGEDIR/english/index.english.php">
		<operation>
			<search position="replace"><![CDATA[$txt['generic_warning'] = 'Warning';
$txt['agreement_missing'] = 'You are requiring new users to accept a registration agreement, however the file (agreement.txt) doesn\'t exist.';

$txt['cache_writable'] = 'The cache directory is not writable - this will adversely affect the performance of your forum.';

$txt['page_created_full'] = 'Page created in %1$.3f seconds with %2$d queries.';]]></search>
			<add><![CDATA[$txt['generic_warning'] = 'Warning';
$txt['agreement_missing'] = 'You are requiring new users to accept a registration agreement, however the file (agreement.txt) doesn\'t exist.';

$txt['new_version_updates'] = 'You have just updated!';
$txt['new_version_updates_text'] = '<a href="{admin_url};area=credits#latest_updates">Click here to see what\'s new in this version of ElkArte!</a>!';

$txt['cache_writable'] = 'The cache directory is not writable - this will adversely affect the performance of your forum.';

$txt['page_created_full'] = 'Page created in %1$.3f seconds with %2$d queries.';]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/admin.js">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0
 *
 * Handle the JavaScript surrounding the admin and moderation center.
 */]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 * Handle the JavaScript surrounding the admin and moderation center.
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[		sMessages = this.init_news ? oElem.innerHTML : '',
		sMessage = '';

	sMessage = this.opt.sAnnouncementMessageTemplate.replace('%href%', announcement.html_url).replace('%subject%', announcement.name).replace('%time%', announcement.published_at.replace(/[TZ]/g, ' ')).replace('%message%', announcement.body);

	oElem.innerHTML = sMessages + this.opt.sAnnouncementTemplate.replace('%content%', sMessage);
	this.init_news = true;]]></search>
			<add><![CDATA[		sMessages = this.init_news ? oElem.innerHTML : '',
		sMessage = '';

	sMessage = this.opt.sAnnouncementMessageTemplate.replace('%href%', announcement.html_url).replace('%subject%', announcement.name).replace('%time%', announcement.published_at.replace(/[TZ]/g, ' ')).replace('%message%', announcement.body).replace(/\n/g, '<br />').replace(/\r/g, '');

	oElem.innerHTML = sMessages + this.opt.sAnnouncementTemplate.replace('%content%', sMessage);
	this.init_news = true;]]></add>
		</operation>
	</file>
	<file name="THEMEDIR/scripts/script.js">
		<operation>
			<search position="replace"><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.1
 *
 * This file contains javascript utility functions
 */]]></search>
			<add><![CDATA[ * copyright:	2011 Simple Machines (http://www.simplemachines.org)
 * license:		BSD, See included LICENSE.TXT for terms and conditions.
 *
 * @version 1.0.2
 *
 * This file contains javascript utility functions
 */]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[}

/**
 * Resize an avatar with JS
 */
function elk_avatarResize()
{
	var possibleAvatars = document.getElementsByTagName('img');

	for (var i = 0; i < possibleAvatars.length; i++)
	{
		var tempAvatars = [],
			j = 0;

		if (possibleAvatars[i].className !== 'avatar')
			continue;

		// Image.prototype.avatar = possibleAvatars[i];
		tempAvatars[j] = new Image();
		tempAvatars[j].avatar = possibleAvatars[i];

		tempAvatars[j].onload = function()
		{
			this.avatar.width = this.width;
			this.avatar.height = this.height;

			if (elk_avatarMaxWidth !== 0 && this.width > elk_avatarMaxWidth)
			{
				this.avatar.height = (elk_avatarMaxWidth * this.height) / this.width;
				this.avatar.width = elk_avatarMaxWidth;
			}

			if (elk_avatarMaxHeight !== 0 && this.avatar.height > elk_avatarMaxHeight)
			{
				this.avatar.width = (elk_avatarMaxHeight * this.avatar.width) / this.avatar.height;
				this.avatar.height = elk_avatarMaxHeight;
			}
		};

		tempAvatars[j].src = possibleAvatars[i].src;
		j++;
	}

	if (typeof(window_oldAvatarOnload) !== 'undefined' && window_oldAvatarOnload)
	{
		window_oldAvatarOnload();
		window_oldAvatarOnload = null;
	}
}

/**
 * Password hashing for user
 *
 * @param {type} doForm]]></search>
			<add><![CDATA[}

/**
 * Password hashing for user
 *
 * @param {type} doForm]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[	else
		this.dropdownList.onfocus = null;

	if (this.opt.bNoRedirect)
		this.dropdownList.options[0].disabled = 'disabled';

	// Create a document fragment that'll allowing inserting big parts at once.
	var oListFragment = document.createDocumentFragment(),]]></search>
			<add><![CDATA[	else
		this.dropdownList.onfocus = null;

	// Create a document fragment that'll allowing inserting big parts at once.
	var oListFragment = document.createDocumentFragment(),]]></add>
		</operation>
	</file>
</modification>